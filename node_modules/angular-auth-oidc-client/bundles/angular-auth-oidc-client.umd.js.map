{"version":3,"file":"angular-auth-oidc-client.umd.js","sources":["../../src/modules/auth.module.ts","../../src/angular-auth-oidc-client.ts","../../src/models/jwtkeys.ts","../../src/models/auth.well-known-endpoints.ts","../../src/services/oidc.security.service.ts","../../src/services/uri-encoder.ts","../../src/services/oidc.security.user-service.ts","../../src/services/oidc-data.service.ts","../../src/services/oidc.security.silent-renew.ts","../../src/services/oidc.security.check-session.ts","../../src/services/oidc-security-state-validation.service.ts","../../src/services/oidc.security.validation.ts","../../src/services/oidc.logger.service.ts","../../src/services/oidc-token-helper.service.ts","../../src/services/oidc-array-helper.service.ts","../../src/services/oidc.security.common.ts","../../src/services/oidc.security.storage.ts","../../src/modules/auth.configuration.ts","../../src/models/validate-state-result.model.ts","../../src/models/authorization-result.enum.ts","../../src/services/oidc.security.config.service.ts"],"sourcesContent":["import { ArrayHelperService } from '../services/oidc-array-helper.service';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { OidcSecurityService } from '../services/oidc.security.service';\nimport { AuthConfiguration, DefaultConfiguration } from './auth.configuration';\nimport { OidcSecurityValidation } from '../services/oidc.security.validation';\nimport { OidcSecurityCheckSession } from '../services/oidc.security.check-session';\nimport { OidcSecuritySilentRenew } from '../services/oidc.security.silent-renew';\nimport { OidcSecurityUserService } from '../services/oidc.security.user-service';\nimport { OidcSecurityCommon } from '../services/oidc.security.common';\nimport {\n    OidcSecurityStorage,\n    BrowserStorage\n} from '../services/oidc.security.storage';\nimport { StateValidationService } from '../services/oidc-security-state-validation.service';\nimport { OidcDataService } from '../services/oidc-data.service';\nimport { TokenHelperService } from '../services/oidc-token-helper.service';\nimport { LoggerService } from '../services/oidc.logger.service';\nimport { OidcConfigService } from '../services/oidc.security.config.service';\r\nimport { AuthWellKnownEndpoints } from '../models/auth.well-known-endpoints';\nexport class AuthModule {\n/**\n * @param {?=} token\n * @return {?}\n */\nstatic forRoot(token: Token = {}): ModuleWithProviders {\n        return {\n            ngModule: AuthModule,\n            providers: [\n                OidcConfigService,\n                OidcSecurityService,\n                OidcSecurityValidation,\n                OidcSecurityCheckSession,\n                OidcSecuritySilentRenew,\n                OidcSecurityUserService,\n                OidcSecurityCommon,\n                AuthConfiguration,\n                TokenHelperService,\n                LoggerService,\n                DefaultConfiguration,\n                ArrayHelperService,\n                AuthWellKnownEndpoints,\n                OidcDataService,\n                StateValidationService,\n                {\n                    provide: OidcSecurityStorage,\n                    useClass: token.storage || BrowserStorage\n                }\n            ]\n        };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AuthModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuthModule.ctorParameters;\n}\n\n\nexport interface Type<T> extends Function {\n    new (...args: any[]): T;\n}\n\nexport interface Token {\n    storage?: Type<any>;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// Public classes.\n\nexport {OidcConfigService} from './services/oidc.security.config.service';\nexport {OidcSecurityService} from './services/oidc.security.service';\nexport {OidcSecurityStorage,BrowserStorage} from './services/oidc.security.storage';\n\n\nexport {AuthWellKnownEndpoints} from './models/auth.well-known-endpoints';\nexport {AuthorizationResult} from './models/authorization-result.enum';\nexport {JwtKeys,JwtKey} from './models/jwtkeys';\nexport {ValidateStateResult} from './models/validate-state-result.model';\n\nexport {DefaultConfiguration,OpenIDImplicitFlowConfiguration,AuthConfiguration} from './modules/auth.configuration';\nexport {AuthModule,Type,Token} from './modules/auth.module';\n\nexport {OidcSecurityValidation} from './services/oidc.security.validation';\n","\nexport class JwtKeys {\n    keys: JwtKey[];\n}\n\nfunction JwtKeys_tsickle_Closure_declarations() {\n/** @type {?} */\nJwtKeys.prototype.keys;\n}\n\nexport class JwtKey {\n    kty: string;\n    use: string;\n    kid: string;\n    x5t: string;\n    e: string;\n    n: string;\n    x5c: any[];\n}\n\nfunction JwtKey_tsickle_Closure_declarations() {\n/** @type {?} */\nJwtKey.prototype.kty;\n/** @type {?} */\nJwtKey.prototype.use;\n/** @type {?} */\nJwtKey.prototype.kid;\n/** @type {?} */\nJwtKey.prototype.x5t;\n/** @type {?} */\nJwtKey.prototype.e;\n/** @type {?} */\nJwtKey.prototype.n;\n/** @type {?} */\nJwtKey.prototype.x5c;\n}\n","\nexport class AuthWellKnownEndpoints {\r\n\r\n    issuer: string;\r\n    jwks_uri: string;\r\n    authorization_endpoint: string;\r\n    token_endpoint: string;\r\n    userinfo_endpoint: string;\r\n    end_session_endpoint: string;\r\n    check_session_iframe: string;\r\n    revocation_endpoint: string;\r\n    introspection_endpoint: string;\n/**\n * @param {?} data\n * @return {?}\n */\npublic setWellKnownEndpoints(data: any) {\r\n        this.issuer = data.issuer;\r\n        this.jwks_uri = data.jwks_uri;\r\n        this.authorization_endpoint = data.authorization_endpoint;\r\n        this.token_endpoint = data.token_endpoint;\r\n        this.userinfo_endpoint = data.userinfo_endpoint;\r\n\r\n        if (data.end_session_endpoint) {\r\n            this.end_session_endpoint = data.end_session_endpoint;\r\n        }\r\n\r\n        if (data.check_session_iframe) {\r\n            this.check_session_iframe = data.check_session_iframe;\r\n        }\r\n\r\n        if (data.revocation_endpoint) {\r\n            this.revocation_endpoint = data.revocation_endpoint;\r\n        }\r\n\r\n        if (data.introspection_endpoint) {\r\n            this.introspection_endpoint = data.introspection_endpoint;\r\n        }\r\n    }\r\n}\n\nfunction AuthWellKnownEndpoints_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.issuer;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.jwks_uri;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.authorization_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.token_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.userinfo_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.end_session_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.check_session_iframe;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.revocation_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.introspection_endpoint;\n}\n\r\n","import { isPlatformBrowser } from '@angular/common';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Inject, PLATFORM_ID, NgZone } from '@angular/core';\r\nimport { EventEmitter, Injectable, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthorizationResult } from '../models/authorization-result.enum';\r\nimport { JwtKeys } from '../models/jwtkeys';\r\nimport { ValidateStateResult } from '../models/validate-state-result.model';\r\nimport {\r\n    AuthConfiguration,\r\n    OpenIDImplicitFlowConfiguration\r\n} from '../modules/auth.configuration';\r\nimport { StateValidationService } from './oidc-security-state-validation.service';\r\nimport { OidcSecurityCheckSession } from './oidc.security.check-session';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { OidcSecuritySilentRenew } from './oidc.security.silent-renew';\r\nimport { OidcSecurityUserService } from './oidc.security.user-service';\r\nimport { OidcSecurityValidation } from './oidc.security.validation';\r\nimport { UriEncoder } from './uri-encoder';\r\nimport { OidcDataService } from './oidc-data.service';\r\nimport { TokenHelperService } from './oidc-token-helper.service';\r\nimport { LoggerService } from './oidc.logger.service';\r\nimport { AuthWellKnownEndpoints } from '../models/auth.well-known-endpoints';\nexport class OidcSecurityService {\r\n     onModuleSetup = new EventEmitter<boolean>();\r\n     onAuthorizationResult = new EventEmitter<AuthorizationResult>();\r\n     onCheckSessionChanged = new EventEmitter<boolean>();\r\n\r\n    checkSessionChanged: boolean;\r\n    moduleSetup = false;\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints;\nprivate _isAuthorized = new BehaviorSubject<boolean>(false);\nprivate _isAuthorizedValue: boolean;\nprivate lastUserData: any;\nprivate _userData = new BehaviorSubject<any>('');\nprivate authWellKnownEndpointsLoaded = false;\nprivate runTokenValidationRunning: boolean;\nprivate _scheduledHeartBeat: any;\nprivate boundSilentRenewEvent: any;\n/**\n * @param {?} platformId\n * @param {?} oidcDataService\n * @param {?} stateValidationService\n * @param {?} authConfiguration\n * @param {?} router\n * @param {?} oidcSecurityCheckSession\n * @param {?} oidcSecuritySilentRenew\n * @param {?} oidcSecurityUserService\n * @param {?} oidcSecurityCommon\n * @param {?} oidcSecurityValidation\n * @param {?} tokenHelperService\n * @param {?} loggerService\n * @param {?} zone\n */\nconstructor(\nprivate platformId: Object,\nprivate oidcDataService: OidcDataService,\nprivate stateValidationService: StateValidationService,\nprivate authConfiguration: AuthConfiguration,\nprivate router: Router,\nprivate oidcSecurityCheckSession: OidcSecurityCheckSession,\nprivate oidcSecuritySilentRenew: OidcSecuritySilentRenew,\nprivate oidcSecurityUserService: OidcSecurityUserService,\nprivate oidcSecurityCommon: OidcSecurityCommon,\nprivate oidcSecurityValidation: OidcSecurityValidation,\nprivate tokenHelperService: TokenHelperService,\nprivate loggerService: LoggerService,\nprivate zone: NgZone\r\n    ) {}\n/**\n * @param {?} openIDImplicitFlowConfiguration\n * @param {?} authWellKnownEndpoints\n * @return {?}\n */\nsetupModule(\r\n        openIDImplicitFlowConfiguration: OpenIDImplicitFlowConfiguration,\r\n        authWellKnownEndpoints: AuthWellKnownEndpoints\r\n    ): void {\r\n        this.authWellKnownEndpoints = Object.assign({}, authWellKnownEndpoints);\r\n        this.authConfiguration.init(openIDImplicitFlowConfiguration);\r\n        this.stateValidationService.setupModule(authWellKnownEndpoints);\r\n        this.oidcSecurityCheckSession.setupModule(authWellKnownEndpoints);\r\n        this.oidcSecurityUserService.setupModule(authWellKnownEndpoints);\r\n\r\n        this.oidcSecurityCheckSession.onCheckSessionChanged.subscribe(() => {\r\n            this.loggerService.logDebug('onCheckSessionChanged');\r\n            this.checkSessionChanged = true;\r\n            this.onCheckSessionChanged.emit(\r\n                this.checkSessionChanged\r\n            );\r\n        });\r\n\r\n        this._userData.subscribe(() => {\r\n            this.onUserDataChanged();\r\n        });\r\n\r\n        const /** @type {?} */ userData = this.oidcSecurityCommon.userData;\r\n        if (userData) {\r\n            this.setUserData(userData);\r\n        }\r\n\r\n        const /** @type {?} */ isAuthorized = this.oidcSecurityCommon.isAuthorized;\r\n        if (isAuthorized) {\r\n            this.loggerService.logDebug('IsAuthorized setup module');\r\n            this.loggerService.logDebug(this.oidcSecurityCommon.idToken);\r\n            if (this.oidcSecurityValidation.isTokenExpired(\r\n                    this.oidcSecurityCommon.idToken,\r\n                    this.authConfiguration.silent_renew_offset_in_seconds)\r\n            ) {\r\n                this.loggerService.logDebug('IsAuthorized setup module; id_token isTokenExpired');\r\n            } else {\r\n                this.loggerService.logDebug('IsAuthorized setup module; id_token is valid');\r\n                this.setIsAuthorized(isAuthorized);\r\n                this.runTokenValidation();\r\n            }\r\n        }\r\n\r\n        this.loggerService.logDebug(\r\n            'STS server: ' + this.authConfiguration.stsServer\r\n        );\r\n\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            // Client only code.\r\n            this.moduleSetup = true;\r\n            this.onModuleSetup.emit();\r\n\r\n            if (this.authConfiguration.silent_renew) {\r\n                this.oidcSecuritySilentRenew.initRenew();\r\n\r\n                // Support authorization via DOM events.\r\n                this.boundSilentRenewEvent =  this.silentRenewEventHandler.bind(this);\r\n                window.addEventListener('oidc-silent-renew-message', this.boundSilentRenewEvent, false);\r\n            }\r\n\r\n            if (\r\n                this.authConfiguration.start_checksession &&\r\n                !this.oidcSecurityCheckSession.doesSessionExist()\r\n            ) {\r\n                this.oidcSecurityCheckSession.init().subscribe(() => {\r\n                    this.oidcSecurityCheckSession.pollServerSession(\r\n                        this.authConfiguration.client_id\r\n                    );\r\n                });\r\n            }\r\n        } else {\r\n            this.moduleSetup = true;\r\n            this.onModuleSetup.emit();\r\n        }\r\n    }\n/**\n * @return {?}\n */\ngetUserData(): Observable<any> {\r\n        return this._userData.asObservable();\r\n    }\n/**\n * @return {?}\n */\ngetIsAuthorized(): Observable<boolean> {\r\n        return this._isAuthorized.asObservable();\r\n    }\n/**\n * @return {?}\n */\ngetToken(): string {\r\n        if (!this._isAuthorizedValue) {\r\n            return '';\r\n        }\r\n\r\n        const /** @type {?} */ token = this.oidcSecurityCommon.getAccessToken();\r\n        return decodeURIComponent(token);\r\n    }\n/**\n * @return {?}\n */\ngetIdToken(): string {\r\n        if (!this._isAuthorizedValue) {\r\n            return '';\r\n        }\r\n\r\n        const /** @type {?} */ token = this.oidcSecurityCommon.getIdToken();\r\n        return decodeURIComponent(token);\r\n    }\n/**\n * @param {?=} encode\n * @return {?}\n */\ngetPayloadFromIdToken(encode = false): any {\r\n        const /** @type {?} */ token = this.getIdToken();\r\n        return this.tokenHelperService.getPayloadFromToken(token, encode);\r\n    }\n/**\n * @param {?} state\n * @return {?}\n */\nsetState(state: string): void {\r\n        this.oidcSecurityCommon.authStateControl = state;\r\n    }\n/**\n * @return {?}\n */\ngetState(): string {\r\n        return this.oidcSecurityCommon.authStateControl;\r\n    }\n/**\n * @param {?} params\n * @return {?}\n */\nsetCustomRequestParameters(params: {\r\n        [key: string]: string | number | boolean;\r\n    }) {\r\n        this.oidcSecurityCommon.customRequestParams = params;\r\n    }\n/**\n * @param {?=} urlHandler\n * @return {?}\n */\nauthorize(urlHandler?: (url: string) => any) {\r\n        if (this.authWellKnownEndpoints) {\r\n            this.authWellKnownEndpointsLoaded = true;\r\n        }\r\n\r\n        if (!this.authWellKnownEndpointsLoaded) {\r\n            this.loggerService.logError(\r\n                'Well known endpoints must be loaded before user can login!'\r\n            );\r\n            return;\r\n        }\r\n\r\n        if (\r\n            !this.oidcSecurityValidation.config_validate_response_type(\r\n                this.authConfiguration.response_type\r\n            )\r\n        ) {\r\n            // invalid response_type\r\n            return;\r\n        }\r\n\r\n        this.resetAuthorizationData(false);\r\n\r\n        this.loggerService.logDebug('BEGIN Authorize, no auth data');\r\n\r\n        let /** @type {?} */ state = this.oidcSecurityCommon.authStateControl;\r\n        if (!state) {\r\n            state = Date.now() + '' + Math.random();\r\n            this.oidcSecurityCommon.authStateControl = state;\r\n        }\r\n\r\n        const /** @type {?} */ nonce = 'N' + Math.random() + '' + Date.now();\r\n        this.oidcSecurityCommon.authNonce = nonce;\r\n        this.loggerService.logDebug(\r\n            'AuthorizedController created. local state: ' +\r\n                this.oidcSecurityCommon.authStateControl\r\n        );\r\n\r\n        const /** @type {?} */ url = this.createAuthorizeUrl(\r\n            this.authConfiguration.redirect_url,\r\n            nonce,\r\n            state,\r\n            this.authWellKnownEndpoints.authorization_endpoint\r\n        );\r\n        if (urlHandler) {\r\n            urlHandler(url);\r\n        } else {\r\n            window.location.href = url;\r\n        }\r\n    }\n/**\n * @param {?=} hash\n * @return {?}\n */\nauthorizedCallback(hash?: string) {\r\n        const /** @type {?} */ silentRenew = this.oidcSecurityCommon.silentRenewRunning;\r\n        const /** @type {?} */ isRenewProcess = silentRenew === 'running';\r\n\r\n        this.loggerService.logDebug('BEGIN authorizedCallback, no auth data');\r\n        this.resetAuthorizationData(isRenewProcess);\r\n\r\n        hash = hash || window.location.hash.substr(1);\r\n\r\n        const /** @type {?} */ result: any = hash\r\n            .split('&')\r\n            .reduce(function(resultData: any, item: string) {\r\n                const /** @type {?} */ parts = item.split('=');\r\n                resultData[parts[0]] = parts[1];\r\n                return resultData;\r\n            }, {});\r\n\r\n        this.oidcSecurityCommon.authResult = result;\r\n        this.loggerService.logDebug(result);\r\n        this.loggerService.logDebug(\r\n            'authorizedCallback created, begin token validation'\r\n        );\r\n\r\n        this.getSigningKeys().subscribe(jwtKeys => {\r\n            const /** @type {?} */ validationResult = this.getValidatedStateResult(\r\n                result,\r\n                jwtKeys\r\n            );\r\n\r\n            if (validationResult.authResponseIsValid) {\r\n                this.setAuthorizationData(\r\n                    validationResult.access_token,\r\n                    validationResult.id_token\r\n                );\r\n                this.oidcSecurityCommon.silentRenewRunning = '';\r\n\r\n                if (this.authConfiguration.auto_userinfo) {\r\n                    this.getUserinfo(\r\n                        isRenewProcess,\r\n                        result,\r\n                        validationResult.id_token,\r\n                        validationResult.decoded_id_token\r\n                    ).subscribe(response => {\r\n                        if (response) {\r\n                            this.onAuthorizationResult.emit(AuthorizationResult.authorized);\r\n                            if (!this.authConfiguration.trigger_authorization_result_event && !isRenewProcess) {\r\n                                this.router.navigate([\r\n                                    this.authConfiguration.post_login_route\r\n                                ]);\r\n                            }\r\n                        } else {\r\n                            this.onAuthorizationResult.emit(AuthorizationResult.unauthorized);\r\n                            if (!this.authConfiguration.trigger_authorization_result_event && !isRenewProcess) {\r\n                                this.router.navigate([\r\n                                    this.authConfiguration.unauthorized_route\r\n                                ]);\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    if (!isRenewProcess) {\r\n                        // userData is set to the id_token decoded, auto get user data set to false\r\n                        this.oidcSecurityUserService.setUserData(\r\n                            validationResult.decoded_id_token\r\n                        );\r\n                        this.setUserData(\r\n                            this.oidcSecurityUserService.getUserData()\r\n                        );\r\n                        this.runTokenValidation();\r\n                    }\r\n\r\n                    this.onAuthorizationResult.emit(AuthorizationResult.authorized);\r\n                    if (!this.authConfiguration.trigger_authorization_result_event && !isRenewProcess) {\r\n                        this.router.navigate([\r\n                            this.authConfiguration.post_login_route\r\n                        ]);\r\n                    }\r\n                }\r\n            } else {\r\n                // something went wrong\r\n                this.loggerService.logWarning(\r\n                    'authorizedCallback, token(s) validation failed, resetting'\r\n                );\r\n                this.loggerService.logWarning(window.location.hash);\r\n                this.resetAuthorizationData(false);\r\n                this.oidcSecurityCommon.silentRenewRunning = '';\r\n\r\n                this.onAuthorizationResult.emit(AuthorizationResult.unauthorized);\r\n                if (!this.authConfiguration.trigger_authorization_result_event && !isRenewProcess) {\r\n                    this.router.navigate([\r\n                        this.authConfiguration.unauthorized_route\r\n                    ]);\r\n                }\r\n            }\r\n        }, (err) => {\r\n            /* Something went wrong while getting signing key */\r\n            this.loggerService.logWarning(\r\n                'Failed to retreive siging key with error: ' + JSON.stringify(err)\r\n            );\r\n            this.oidcSecurityCommon.silentRenewRunning = '';\r\n        });\r\n    }\n/**\n * @param {?=} isRenewProcess\n * @param {?=} result\n * @param {?=} id_token\n * @param {?=} decoded_id_token\n * @return {?}\n */\ngetUserinfo(\r\n        isRenewProcess = false,\r\n        result?: any,\r\n        id_token?: any,\r\n        decoded_id_token?: any\r\n    ): Observable<boolean> {\r\n        result = result ? result : this.oidcSecurityCommon.authResult;\r\n        id_token = id_token ? id_token : this.oidcSecurityCommon.idToken;\r\n        decoded_id_token = decoded_id_token\r\n            ? decoded_id_token\r\n            : this.tokenHelperService.getPayloadFromToken(id_token, false);\r\n\r\n        return new Observable<boolean>(observer => {\r\n            // flow id_token token\r\n            if (this.authConfiguration.response_type === 'id_token token') {\r\n                if (isRenewProcess) {\r\n                    this.oidcSecurityCommon.sessionState = result.session_state;\r\n                    observer.next(true);\r\n                    observer.complete();\r\n                } else {\r\n                    this.oidcSecurityUserService\r\n                        .initUserData()\r\n                        .subscribe(() => {\r\n                            this.loggerService.logDebug(\r\n                                'authorizedCallback id_token token flow'\r\n                            );\r\n\r\n                            const /** @type {?} */ userData = this.oidcSecurityUserService.getUserData();\r\n\r\n                            if (\r\n                                this.oidcSecurityValidation.validate_userdata_sub_id_token(\r\n                                    decoded_id_token.sub,\r\n                                    userData.sub\r\n                                )\r\n                            ) {\r\n                                this.setUserData(userData);\r\n                                this.loggerService.logDebug(\r\n                                    this.oidcSecurityCommon.accessToken\r\n                                );\r\n                                this.loggerService.logDebug(\r\n                                    this.oidcSecurityUserService.getUserData()\r\n                                );\r\n\r\n                                this.oidcSecurityCommon.sessionState =\r\n                                    result.session_state;\r\n\r\n                                this.runTokenValidation();\r\n                                observer.next(true);\r\n                            } else {\r\n                                // something went wrong, userdata sub does not match that from id_token\r\n                                this.loggerService.logWarning(\r\n                                    'authorizedCallback, User data sub does not match sub in id_token'\r\n                                );\r\n                                this.loggerService.logDebug(\r\n                                    'authorizedCallback, token(s) validation failed, resetting'\r\n                                );\r\n                                this.resetAuthorizationData(false);\r\n                                observer.next(false);\r\n                            }\r\n                            observer.complete();\r\n                        });\r\n                }\r\n            } else {\r\n                // flow id_token\r\n                this.loggerService.logDebug('authorizedCallback id_token flow');\r\n                this.loggerService.logDebug(\r\n                    this.oidcSecurityCommon.accessToken\r\n                );\r\n\r\n                // userData is set to the id_token decoded. No access_token.\r\n                this.oidcSecurityUserService.setUserData(decoded_id_token);\r\n                this.setUserData(this.oidcSecurityUserService.getUserData());\r\n\r\n                this.oidcSecurityCommon.sessionState = result.session_state;\r\n\r\n                if (!isRenewProcess) {\r\n                    this.runTokenValidation();\r\n                }\r\n\r\n                observer.next(true);\r\n                observer.complete();\r\n            }\r\n        });\r\n    }\n/**\n * @return {?}\n */\nlogoff() {\r\n        // /connect/endsession?id_token_hint=...&post_logout_redirect_uri=https://myapp.com\r\n        this.loggerService.logDebug('BEGIN Authorize, no auth data');\r\n\r\n        if (this.authWellKnownEndpoints.end_session_endpoint) {\r\n            const /** @type {?} */ end_session_endpoint = this.authWellKnownEndpoints\r\n                .end_session_endpoint;\r\n            const /** @type {?} */ id_token_hint = this.oidcSecurityCommon.idToken;\r\n            const /** @type {?} */ url = this.createEndSessionUrl(\r\n                end_session_endpoint,\r\n                id_token_hint\r\n            );\r\n\r\n            this.resetAuthorizationData(false);\r\n\r\n            if (\r\n                this.authConfiguration.start_checksession &&\r\n                this.checkSessionChanged\r\n            ) {\r\n                this.loggerService.logDebug(\r\n                    'only local login cleaned up, server session has changed'\r\n                );\r\n            } else {\r\n                window.location.href = url;\r\n            }\r\n        } else {\r\n            this.resetAuthorizationData(false);\r\n            this.loggerService.logDebug(\r\n                'only local login cleaned up, no end_session_endpoint'\r\n            );\r\n        }\r\n    }\n/**\n * @return {?}\n */\nrefreshSession(): Observable<any> {\r\n        this.loggerService.logDebug('BEGIN refresh session Authorize');\r\n\r\n        let /** @type {?} */ state = this.oidcSecurityCommon.authStateControl;\r\n        if (state === '' || state === null) {\r\n            state = Date.now() + '' + Math.random();\r\n            this.oidcSecurityCommon.authStateControl = state;\r\n        }\r\n\r\n        const /** @type {?} */ nonce = 'N' + Math.random() + '' + Date.now();\r\n        this.oidcSecurityCommon.authNonce = nonce;\r\n        this.loggerService.logDebug(\r\n            'RefreshSession created. adding myautostate: ' +\r\n                this.oidcSecurityCommon.authStateControl\r\n        );\r\n\r\n        const /** @type {?} */ url = this.createAuthorizeUrl(\r\n            this.authConfiguration.silent_redirect_url,\r\n            nonce,\r\n            state,\r\n            this.authWellKnownEndpoints.authorization_endpoint,\r\n            'none'\r\n        );\r\n\r\n        this.oidcSecurityCommon.silentRenewRunning = 'running';\r\n        return this.oidcSecuritySilentRenew.startRenew(url);\r\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nhandleError(error: any) {\r\n        this.loggerService.logError(error);\r\n        if (error.status === 403 || error.status === '403') {\r\n            if (this.authConfiguration.trigger_authorization_result_event) {\r\n                this.onAuthorizationResult.emit(\r\n                    AuthorizationResult.unauthorized\r\n                );\r\n            } else {\r\n                this.router.navigate([this.authConfiguration.forbidden_route]);\r\n            }\r\n        } else if (error.status === 401 || error.status === '401') {\r\n            const /** @type {?} */ silentRenew = this.oidcSecurityCommon.silentRenewRunning;\r\n\r\n            this.resetAuthorizationData(!!silentRenew);\r\n\r\n            if (this.authConfiguration.trigger_authorization_result_event) {\r\n                this.onAuthorizationResult.emit(\r\n                    AuthorizationResult.unauthorized\r\n                );\r\n            } else {\r\n                this.router.navigate([\r\n                    this.authConfiguration.unauthorized_route\r\n                ]);\r\n            }\r\n        }\r\n    }\n/**\n * @return {?}\n */\nstartCheckingSilentRenew(): void {\r\n        this.runTokenValidation();\r\n    }\n/**\n * @return {?}\n */\nstopCheckingSilentRenew(): void {\r\n        if (this._scheduledHeartBeat) {\r\n            clearTimeout(this._scheduledHeartBeat);\r\n            this._scheduledHeartBeat = null;\r\n            this.runTokenValidationRunning = false;\r\n        }\r\n    }\n/**\n * @param {?} result\n * @param {?} jwtKeys\n * @return {?}\n */\nprivate getValidatedStateResult(\r\n        result: any,\r\n        jwtKeys: JwtKeys\r\n    ): ValidateStateResult {\r\n        if (result.error) {\r\n            return new ValidateStateResult('', '', false, {});\r\n        }\r\n\r\n        return this.stateValidationService.validateState(result, jwtKeys);\r\n    }\n/**\n * @param {?} userData\n * @return {?}\n */\nprivate setUserData(userData: any): void {\r\n        this.oidcSecurityCommon.userData = userData;\r\n        this._userData.next(userData);\r\n    }\n/**\n * @param {?} isAuthorized\n * @return {?}\n */\nprivate setIsAuthorized(isAuthorized: boolean): void {\r\n        this._isAuthorizedValue = isAuthorized;\r\n        this._isAuthorized.next(isAuthorized);\r\n    }\n/**\n * @param {?} access_token\n * @param {?} id_token\n * @return {?}\n */\nprivate setAuthorizationData(access_token: any, id_token: any) {\r\n        if (this.oidcSecurityCommon.accessToken !== '') {\r\n            this.oidcSecurityCommon.accessToken = '';\r\n        }\r\n\r\n        this.loggerService.logDebug(access_token);\r\n        this.loggerService.logDebug(id_token);\r\n        this.loggerService.logDebug('storing to storage, getting the roles');\r\n        this.oidcSecurityCommon.accessToken = access_token;\r\n        this.oidcSecurityCommon.idToken = id_token;\r\n        this.setIsAuthorized(true);\r\n        this.oidcSecurityCommon.isAuthorized = true;\r\n    }\n/**\n * @param {?} redirect_url\n * @param {?} nonce\n * @param {?} state\n * @param {?} authorization_endpoint\n * @param {?=} prompt\n * @return {?}\n */\nprivate createAuthorizeUrl(\r\n        redirect_url: string,\r\n        nonce: string,\r\n        state: string,\r\n        authorization_endpoint: string,\r\n        prompt?: string\r\n    ): string {\r\n        const /** @type {?} */ urlParts = authorization_endpoint.split('?');\r\n        const /** @type {?} */ authorizationUrl = urlParts[0];\r\n        let /** @type {?} */ params = new HttpParams({\r\n            fromString: urlParts[1],\r\n            encoder: new UriEncoder()\r\n        });\r\n        params = params.set('client_id', this.authConfiguration.client_id);\r\n        params = params.append(\r\n            'redirect_uri',\r\n            redirect_url\r\n        );\r\n        params = params.append(\r\n            'response_type',\r\n            this.authConfiguration.response_type\r\n        );\r\n        params = params.append('scope', this.authConfiguration.scope);\r\n        params = params.append('nonce', nonce);\r\n        params = params.append('state', state);\r\n\r\n        if (prompt) {\r\n            params = params.append('prompt', prompt);\r\n        }\r\n\r\n        if (this.authConfiguration.hd_param) {\r\n            params = params.append('hd', this.authConfiguration.hd_param);\r\n        }\r\n\r\n        const /** @type {?} */ customParams = Object.assign(\r\n            {},\r\n            this.oidcSecurityCommon.customRequestParams\r\n        );\r\n\r\n        Object.keys(customParams).forEach(key => {\r\n            params = params.append(key, customParams[key].toString());\r\n        });\r\n\r\n        return `${authorizationUrl}?${params}`;\r\n    }\n/**\n * @param {?} end_session_endpoint\n * @param {?} id_token_hint\n * @return {?}\n */\nprivate createEndSessionUrl(\r\n        end_session_endpoint: string,\r\n        id_token_hint: string\r\n    ) {\r\n        const /** @type {?} */ urlParts = end_session_endpoint.split('?');\r\n\r\n        const /** @type {?} */ authorizationEndsessionUrl = urlParts[0];\r\n\r\n        let /** @type {?} */ params = new HttpParams({\r\n            fromString: urlParts[1],\r\n            encoder: new UriEncoder()\r\n        });\r\n        params = params.set('id_token_hint', id_token_hint);\r\n        params = params.append(\r\n            'post_logout_redirect_uri',\r\n            this.authConfiguration.post_logout_redirect_uri\r\n        );\r\n\r\n        return `${authorizationEndsessionUrl}?${params}`;\r\n    }\n/**\n * @param {?} isRenewProcess\n * @return {?}\n */\nprivate resetAuthorizationData(isRenewProcess: boolean) {\r\n        if (!isRenewProcess) {\r\n            if (this.authConfiguration.auto_userinfo) {\r\n                // Clear user data. Fixes #97.\r\n                this.setUserData('');\r\n            }\r\n            this.setIsAuthorized(false);\r\n            this.oidcSecurityCommon.resetStorageData(isRenewProcess);\r\n            this.checkSessionChanged = false;\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprivate onUserDataChanged() {\r\n        this.loggerService.logDebug(\r\n            `onUserDataChanged: last = ${this.lastUserData}, new = ${\r\n                this._userData.value\r\n            }`\r\n        );\r\n\r\n        if (this.lastUserData && !this._userData.value) {\r\n            this.loggerService.logDebug('onUserDataChanged: Logout detected.');\r\n            // TODO should we have an action here\r\n        }\r\n        this.lastUserData = this._userData.value;\r\n    }\n/**\n * @return {?}\n */\nprivate getSigningKeys(): Observable<JwtKeys> {\r\n        this.loggerService.logDebug(\r\n            'jwks_uri: ' + this.authWellKnownEndpoints.jwks_uri\r\n        );\r\n        return this.oidcDataService\r\n            .get<JwtKeys>(this.authWellKnownEndpoints.jwks_uri)\r\n            .pipe(catchError(this.handleErrorGetSigningKeys));\r\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate handleErrorGetSigningKeys(error: Response | any) {\r\n        let /** @type {?} */ errMsg: string;\r\n        if (error instanceof Response) {\r\n            const /** @type {?} */ body = error.json() || {};\r\n            const /** @type {?} */ err = JSON.stringify(body);\r\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n        } else {\r\n            errMsg = error.message ? error.message : error.toString();\r\n        }\r\n        console.error(errMsg);\r\n        return Observable.throw(errMsg);\r\n    }\n/**\n * @return {?}\n */\nprivate runTokenValidation() {\r\n        if (this.runTokenValidationRunning) {\r\n            return;\r\n        }\r\n        this.runTokenValidationRunning = true;\n/**\n * First time: delay 10 seconds to call silentRenewHeartBeatCheck\rAfterwards: Run this check in a 5 second interval only AFTER the previous operation ends.\n */\nconst silentRenewHeartBeatCheck = () => {\r\n            if (this._userData.value && (this.oidcSecurityCommon.silentRenewRunning !== 'running') && this.getIdToken()) {\r\n                if (this.oidcSecurityValidation.isTokenExpired(\r\n                    this.oidcSecurityCommon.idToken,\r\n                    this.authConfiguration.silent_renew_offset_in_seconds\r\n                )\r\n                ) {\r\n                    this.loggerService.logDebug(\r\n                        'IsAuthorized: id_token isTokenExpired, start silent renew if active'\r\n                    );\r\n\r\n                    if (this.authConfiguration.silent_renew) {\r\n                        this.refreshSession().subscribe(() => {\r\n                            this._scheduledHeartBeat = setTimeout(silentRenewHeartBeatCheck, 3000);\r\n                        }, (err: any) => {\r\n                            this.loggerService.logError('Error: ' + err);\r\n                            this._scheduledHeartBeat = setTimeout(silentRenewHeartBeatCheck, 3000);\r\n                        });\r\n                        /* In this situation, we schedule a heatbeat check only when silentRenew is finished.\r\n                        We don't want to schedule another check so we have to return here */\r\n                        return;\r\n                    } else {\r\n                        this.resetAuthorizationData(false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /* Delay 3 seconds and do the next check */\r\n            this._scheduledHeartBeat = setTimeout(silentRenewHeartBeatCheck, 3000);\r\n        };\r\n\r\n        this.zone.runOutsideAngular(() => {\r\n            /* Initial heartbeat check */\r\n            this._scheduledHeartBeat = setTimeout(silentRenewHeartBeatCheck, 10000);\r\n        });\r\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nprivate silentRenewEventHandler(e: CustomEvent) {\r\n        this.loggerService.logDebug('silentRenewEventHandler');\r\n        this.authorizedCallback(e.detail);\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n{type: OidcDataService, },\n{type: StateValidationService, },\n{type: AuthConfiguration, },\n{type: Router, },\n{type: OidcSecurityCheckSession, },\n{type: OidcSecuritySilentRenew, },\n{type: OidcSecurityUserService, },\n{type: OidcSecurityCommon, },\n{type: OidcSecurityValidation, },\n{type: TokenHelperService, },\n{type: LoggerService, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onModuleSetup': [{ type: Output },],\n'onAuthorizationResult': [{ type: Output },],\n'onCheckSessionChanged': [{ type: Output },],\n};\n}\n\nfunction OidcSecurityService_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityService.ctorParameters;\n/** @type {?} */\nOidcSecurityService.propDecorators;\n/** @type {?} */\nOidcSecurityService.prototype.onModuleSetup;\n/** @type {?} */\nOidcSecurityService.prototype.onAuthorizationResult;\n/** @type {?} */\nOidcSecurityService.prototype.onCheckSessionChanged;\n/** @type {?} */\nOidcSecurityService.prototype.checkSessionChanged;\n/** @type {?} */\nOidcSecurityService.prototype.moduleSetup;\n/** @type {?} */\nOidcSecurityService.prototype.authWellKnownEndpoints;\n/** @type {?} */\nOidcSecurityService.prototype._isAuthorized;\n/** @type {?} */\nOidcSecurityService.prototype._isAuthorizedValue;\n/** @type {?} */\nOidcSecurityService.prototype.lastUserData;\n/** @type {?} */\nOidcSecurityService.prototype._userData;\n/** @type {?} */\nOidcSecurityService.prototype.authWellKnownEndpointsLoaded;\n/** @type {?} */\nOidcSecurityService.prototype.runTokenValidationRunning;\n/** @type {?} */\nOidcSecurityService.prototype._scheduledHeartBeat;\n/** @type {?} */\nOidcSecurityService.prototype.boundSilentRenewEvent;\n/** @type {?} */\nOidcSecurityService.prototype.platformId;\n/** @type {?} */\nOidcSecurityService.prototype.oidcDataService;\n/** @type {?} */\nOidcSecurityService.prototype.stateValidationService;\n/** @type {?} */\nOidcSecurityService.prototype.authConfiguration;\n/** @type {?} */\nOidcSecurityService.prototype.router;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityCheckSession;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecuritySilentRenew;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityUserService;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityCommon;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityValidation;\n/** @type {?} */\nOidcSecurityService.prototype.tokenHelperService;\n/** @type {?} */\nOidcSecurityService.prototype.loggerService;\n/** @type {?} */\nOidcSecurityService.prototype.zone;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { HttpParameterCodec } from '@angular/common/http';\nexport class UriEncoder implements HttpParameterCodec {\n/**\n * @param {?} key\n * @return {?}\n */\nencodeKey(key: string): string {\n        return encodeURIComponent(key);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nencodeValue(value: string): string {\n        return encodeURIComponent(value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\ndecodeKey(key: string): string {\n        return decodeURIComponent(key);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\ndecodeValue(value: string): string {\n        return decodeURIComponent(value);\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { map } from 'rxjs/operators';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { OidcDataService } from './oidc-data.service';\r\nimport { AuthWellKnownEndpoints } from '../models/auth.well-known-endpoints';\nexport class OidcSecurityUserService {\nprivate userData: any = '';\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints;\n/**\n * @param {?} oidcDataService\n * @param {?} oidcSecurityCommon\n */\nconstructor(\nprivate oidcDataService: OidcDataService,\nprivate oidcSecurityCommon: OidcSecurityCommon,\r\n    ) { }\n/**\n * @param {?} authWellKnownEndpoints\n * @return {?}\n */\nsetupModule(authWellKnownEndpoints: AuthWellKnownEndpoints) {\n        this.authWellKnownEndpoints = Object.assign({}, authWellKnownEndpoints);\n    }\n/**\n * @return {?}\n */\ninitUserData() {\r\n        return this.getIdentityUserData().pipe(\r\n            map((data: any) => (this.userData = data))\r\n        );\r\n    }\n/**\n * @return {?}\n */\ngetUserData(): any {\r\n        if (!this.userData) {\r\n            throw Error('UserData is not set!');\r\n        }\r\n\r\n        return this.userData;\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nsetUserData(value: any): void {\r\n        this.userData = value;\r\n    }\n/**\n * @return {?}\n */\nprivate getIdentityUserData(): Observable<any> {\r\n        const /** @type {?} */ token = this.oidcSecurityCommon.getAccessToken();\r\n\r\n        return this.oidcDataService.getIdentityUserData(\r\n            this.authWellKnownEndpoints.userinfo_endpoint,\r\n            token\r\n        );\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OidcDataService, },\n{type: OidcSecurityCommon, },\n];\n}\n\nfunction OidcSecurityUserService_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityUserService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityUserService.ctorParameters;\n/** @type {?} */\nOidcSecurityUserService.prototype.userData;\n/** @type {?} */\nOidcSecurityUserService.prototype.authWellKnownEndpoints;\n/** @type {?} */\nOidcSecurityUserService.prototype.oidcDataService;\n/** @type {?} */\nOidcSecurityUserService.prototype.oidcSecurityCommon;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nexport class OidcDataService {\n/**\n * @param {?} httpClient\n */\nconstructor(private httpClient: HttpClient) {}\n/**\n * @template T\n * @param {?} url\n * @return {?}\n */\ngetWellknownEndpoints<T>(url: string): Observable<T> {\n        let /** @type {?} */ headers = new HttpHeaders();\n        headers = headers.set('Accept', 'application/json');\n\n        return this.httpClient.get<T>(url, {\n            headers: headers\n        });\n    }\n/**\n * @template T\n * @param {?} url\n * @param {?} token\n * @return {?}\n */\ngetIdentityUserData<T>(url: string, token: string): Observable<T> {\n        let /** @type {?} */ headers = new HttpHeaders();\n        headers = headers.set('Accept', 'application/json');\n        headers = headers.set(\n            'Authorization',\n            'Bearer ' + decodeURIComponent(token)\n        );\n\n        return this.httpClient.get<T>(url, {\n            headers: headers\n        });\n    }\n/**\n * @template T\n * @param {?} url\n * @return {?}\n */\nget<T>(url: string): Observable<T> {\n        let /** @type {?} */ headers = new HttpHeaders();\n        headers = headers.set('Accept', 'application/json');\n\n        return this.httpClient.get<T>(url, {\n            headers: headers\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HttpClient, },\n];\n}\n\nfunction OidcDataService_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcDataService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcDataService.ctorParameters;\n/** @type {?} */\nOidcDataService.prototype.httpClient;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { LoggerService } from './oidc.logger.service';\nexport class OidcSecuritySilentRenew {\nprivate sessionIframe: any;\n/**\n * @param {?} loggerService\n */\nconstructor(private loggerService: LoggerService) {}\n/**\n * @return {?}\n */\ninitRenew() {\r\n        let /** @type {?} */ existsparent = undefined;\r\n        try {\r\n            const /** @type {?} */ parentdoc = window.parent.document;\r\n            if (!parentdoc) {\r\n                throw new Error('Unaccessible');\r\n            }\r\n\r\n            existsparent = parentdoc.getElementById('myiFrameForSilentRenew');\r\n        } catch ( /** @type {?} */e) {\r\n            // not accessible\r\n        }\r\n        const /** @type {?} */ exists = window.document.getElementById('myiFrameForSilentRenew');\r\n        if (existsparent) {\r\n            this.sessionIframe = existsparent;\r\n        } else if (exists) {\r\n            this.sessionIframe = exists;\r\n        }\r\n\r\n        if (!exists && !existsparent) {\r\n            this.sessionIframe = window.document.createElement('iframe');\r\n            this.sessionIframe.id = 'myiFrameForSilentRenew';\r\n            this.loggerService.logDebug(this.sessionIframe);\r\n            this.sessionIframe.style.display = 'none';\r\n\r\n            window.document.body.appendChild(this.sessionIframe);\r\n        }\r\n    }\n/**\n * @param {?} url\n * @return {?}\n */\nstartRenew(url: string): Observable<any> {\r\n        let /** @type {?} */ existsparent = undefined;\r\n        try {\r\n            const /** @type {?} */ parentdoc = window.parent.document;\r\n            if (!parentdoc) {\r\n                throw new Error('Unaccessible');\r\n            }\r\n\r\n            existsparent = parentdoc.getElementById('myiFrameForSilentRenew');\r\n        } catch ( /** @type {?} */e) {\r\n            // not accessible\r\n        }\r\n        const /** @type {?} */ exists = window.document.getElementById('myiFrameForSilentRenew');\r\n        if (existsparent) {\r\n            this.sessionIframe = existsparent;\r\n        } else if (exists) {\r\n            this.sessionIframe = exists;\r\n        }\r\n\r\n        this.loggerService.logDebug('startRenew for URL:' + url);\r\n        this.sessionIframe.src = url;\r\n\r\n        return Observable.create((observer: Observer<any>) => {\r\n            this.sessionIframe.onload = () => {\r\n                observer.next(this);\r\n                observer.complete();\r\n            };\r\n        });\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LoggerService, },\n];\n}\n\nfunction OidcSecuritySilentRenew_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecuritySilentRenew.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecuritySilentRenew.ctorParameters;\n/** @type {?} */\nOidcSecuritySilentRenew.prototype.sessionIframe;\n/** @type {?} */\nOidcSecuritySilentRenew.prototype.loggerService;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, EventEmitter, Output, NgZone } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { AuthConfiguration } from '../modules/auth.configuration';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { LoggerService } from './oidc.logger.service';\r\nimport { AuthWellKnownEndpoints } from '../models/auth.well-known-endpoints';\nexport class OidcSecurityCheckSession {\nprivate sessionIframe: any;\nprivate iframeMessageEvent: any;\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints;\nprivate _scheduledHeartBeat: any;\r\n\r\n    \r\n    onCheckSessionChanged: EventEmitter<any> = new EventEmitter<any>(true);\n/**\n * @param {?} authConfiguration\n * @param {?} oidcSecurityCommon\n * @param {?} loggerService\n * @param {?} zone\n */\nconstructor(\nprivate authConfiguration: AuthConfiguration,\nprivate oidcSecurityCommon: OidcSecurityCommon,\nprivate loggerService: LoggerService,\nprivate zone: NgZone\r\n    ) {}\n/**\n * @param {?} authWellKnownEndpoints\n * @return {?}\n */\nsetupModule(authWellKnownEndpoints: AuthWellKnownEndpoints) {\r\n        this.authWellKnownEndpoints = Object.assign({}, authWellKnownEndpoints);\r\n    }\n/**\n * @return {?}\n */\ndoesSessionExist(): boolean {\r\n        let /** @type {?} */ existsparent = undefined;\r\n        try {\r\n            const /** @type {?} */ parentdoc = window.parent.document;\r\n            if (!parentdoc) {\r\n                throw new Error('Unaccessible');\r\n            }\r\n\r\n            existsparent = parentdoc.getElementById('myiFrameForCheckSession');\r\n        } catch ( /** @type {?} */e) {\r\n            // not accessible\r\n        }\r\n        const /** @type {?} */ exists = window.document.getElementById(\r\n            'myiFrameForCheckSession'\r\n        );\r\n        if (existsparent) {\r\n            this.sessionIframe = existsparent;\r\n        } else if (exists) {\r\n            this.sessionIframe = exists;\r\n        }\r\n\r\n        if (existsparent || exists) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\n/**\n * @return {?}\n */\ninit() {\r\n        this.sessionIframe = window.document.createElement('iframe');\r\n        this.sessionIframe.id = 'myiFrameForCheckSession';\r\n        this.loggerService.logDebug(this.sessionIframe);\r\n        this.sessionIframe.style.display = 'none';\r\n        window.document.body.appendChild(this.sessionIframe);\r\n        this.sessionIframe.src = this.authWellKnownEndpoints.check_session_iframe;\r\n\r\n        this.iframeMessageEvent = this.messageHandler.bind(this);\r\n        window.addEventListener('message', this.iframeMessageEvent, false);\r\n\r\n        return Observable.create((observer: Observer<any>) => {\r\n            this.sessionIframe.onload = () => {\r\n                observer.next(this);\r\n                observer.complete();\r\n            };\r\n        });\r\n    }\n/**\n * @param {?} clientId\n * @return {?}\n */\nstartCheckingSession(clientId: any): void {\r\n        if (!this._scheduledHeartBeat) {\r\n            this.pollServerSession(clientId);\r\n        }\r\n    }\n/**\n * @return {?}\n */\nstopCheckingSession(): void {\r\n        if (this._scheduledHeartBeat) {\r\n            clearTimeout(this._scheduledHeartBeat);\r\n            this._scheduledHeartBeat = null;\r\n        }\r\n    }\n/**\n * @param {?} clientId\n * @return {?}\n */\npollServerSession(clientId: any) {\r\n        const /** @type {?} */ _pollServerSessionRecur = () => {\r\n            if (this.sessionIframe && clientId) {\r\n                this.loggerService.logDebug(this.sessionIframe);\r\n                const /** @type {?} */ session_state = this.oidcSecurityCommon.sessionState;\r\n                if (session_state) {\r\n                    this.sessionIframe.contentWindow.postMessage(\r\n                        clientId + ' ' + session_state,\r\n                        this.authConfiguration.stsServer\r\n                    );\r\n                }\r\n            } else {\r\n                this.loggerService.logWarning(\r\n                    'OidcSecurityCheckSession pollServerSession sessionIframe does not exist'\r\n                );\r\n                this.loggerService.logDebug(clientId);\r\n                this.loggerService.logDebug(this.sessionIframe);\r\n                // this.init();\r\n            }\r\n            this._scheduledHeartBeat = setTimeout(_pollServerSessionRecur, 3000);\r\n        };\r\n\r\n        this.zone.runOutsideAngular(() => {\r\n            this._scheduledHeartBeat = setTimeout(_pollServerSessionRecur, 3000);\r\n        });\r\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nprivate messageHandler(e: any) {\r\n        if (\r\n            this.sessionIframe &&\r\n            e.origin === this.authConfiguration.stsServer &&\r\n            e.source === this.sessionIframe.contentWindow\r\n        ) {\r\n            if (e.data === 'error') {\r\n                this.loggerService.logWarning(\r\n                    'error from checksession messageHandler'\r\n                );\r\n            } else if (e.data === 'changed') {\r\n                this.onCheckSessionChanged.emit();\r\n            } else {\r\n                this.loggerService.logDebug(\r\n                    e.data + ' from checksession messageHandler'\r\n                );\r\n            }\r\n        }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n{type: OidcSecurityCommon, },\n{type: LoggerService, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onCheckSessionChanged': [{ type: Output },],\n};\n}\n\nfunction OidcSecurityCheckSession_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityCheckSession.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityCheckSession.ctorParameters;\n/** @type {?} */\nOidcSecurityCheckSession.propDecorators;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.sessionIframe;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.iframeMessageEvent;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.authWellKnownEndpoints;\n/** @type {?} */\nOidcSecurityCheckSession.prototype._scheduledHeartBeat;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.onCheckSessionChanged;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.authConfiguration;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.oidcSecurityCommon;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.loggerService;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.zone;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { OidcSecurityCommon } from './oidc.security.common';\nimport { OidcSecurityValidation } from './oidc.security.validation';\nimport { AuthConfiguration } from '../modules/auth.configuration';\nimport { ValidateStateResult } from '../models/validate-state-result.model';\nimport { JwtKeys } from '../models/jwtkeys';\nimport { TokenHelperService } from './oidc-token-helper.service';\nimport { LoggerService } from './oidc.logger.service';\nimport { AuthWellKnownEndpoints } from '../models/auth.well-known-endpoints';\nexport class StateValidationService {\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints;\n/**\n * @param {?} authConfiguration\n * @param {?} oidcSecurityCommon\n * @param {?} oidcSecurityValidation\n * @param {?} tokenHelperService\n * @param {?} loggerService\n */\nconstructor(\nprivate authConfiguration: AuthConfiguration,\npublic oidcSecurityCommon: OidcSecurityCommon,\nprivate oidcSecurityValidation: OidcSecurityValidation,\nprivate tokenHelperService: TokenHelperService,\nprivate loggerService: LoggerService\n    ) {}\n/**\n * @param {?} authWellKnownEndpoints\n * @return {?}\n */\nsetupModule(authWellKnownEndpoints: AuthWellKnownEndpoints) {\n        this.authWellKnownEndpoints = Object.assign({}, authWellKnownEndpoints);\n    }\n/**\n * @param {?} result\n * @param {?} jwtKeys\n * @return {?}\n */\nvalidateState(result: any, jwtKeys: JwtKeys): ValidateStateResult {\n        const /** @type {?} */ toReturn = new ValidateStateResult('', '', false, {});\n        if (\n            !this.oidcSecurityValidation.validateStateFromHashCallback(\n                result.state,\n                this.oidcSecurityCommon.authStateControl\n            )\n        ) {\n            this.loggerService.logWarning('authorizedCallback incorrect state');\n            return toReturn;\n        }\n\n        if (this.authConfiguration.response_type === 'id_token token') {\n            toReturn.access_token = result.access_token;\n        }\n        toReturn.id_token = result.id_token;\n\n        toReturn.decoded_id_token = this.tokenHelperService.getPayloadFromToken(\n            toReturn.id_token,\n            false\n        );\n\n        if (\n            !this.oidcSecurityValidation.validate_signature_id_token(\n                toReturn.id_token,\n                jwtKeys\n            )\n        ) {\n            this.loggerService.logDebug(\n                'authorizedCallback Signature validation failed id_token'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_nonce(\n                toReturn.decoded_id_token,\n                this.oidcSecurityCommon.authNonce\n            )\n        ) {\n            this.loggerService.logWarning('authorizedCallback incorrect nonce');\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_required_id_token(\n                toReturn.decoded_id_token\n            )\n        ) {\n            this.loggerService.logDebug(\n                'authorizedCallback Validation, one of the REQUIRED properties missing from id_token'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_iat_max_offset(\n                toReturn.decoded_id_token,\n                this.authConfiguration\n                    .max_id_token_iat_offset_allowed_in_seconds\n            )\n        ) {\n            this.loggerService.logWarning(\n                'authorizedCallback Validation, iat rejected id_token was issued too far away from the current time'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_iss(\n                toReturn.decoded_id_token,\n                this.authWellKnownEndpoints.issuer\n            )\n        ) {\n            this.loggerService.logWarning(\n                'authorizedCallback incorrect iss does not match authWellKnownEndpoints issuer'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_aud(\n                toReturn.decoded_id_token,\n                this.authConfiguration.client_id\n            )\n        ) {\n            this.loggerService.logWarning('authorizedCallback incorrect aud');\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_exp_not_expired(\n                toReturn.decoded_id_token\n            )\n        ) {\n            this.loggerService.logWarning('authorizedCallback token expired');\n            return toReturn;\n        }\n\n        // flow id_token token\n        if (this.authConfiguration.response_type !== 'id_token token') {\n            toReturn.authResponseIsValid = true;\n            this.handleSuccessfulValidation();\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_at_hash(\n                toReturn.access_token,\n                toReturn.decoded_id_token.at_hash\n            ) ||\n            !toReturn.access_token\n        ) {\n            this.loggerService.logWarning(\n                'authorizedCallback incorrect at_hash'\n            );\n            return toReturn;\n        }\n\n        toReturn.authResponseIsValid = true;\n        this.handleSuccessfulValidation();\n        return toReturn;\n    }\n/**\n * @return {?}\n */\nprivate handleSuccessfulValidation() {\n        this.oidcSecurityCommon.authNonce = '';\n\n        if (this.authConfiguration.auto_clean_state_after_authentication) {\n            this.oidcSecurityCommon.authStateControl = '';\n        }\n        this.loggerService.logDebug(\n            'AuthorizedCallback token(s) validated, continue'\n        );\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n{type: OidcSecurityCommon, },\n{type: OidcSecurityValidation, },\n{type: TokenHelperService, },\n{type: LoggerService, },\n];\n}\n\nfunction StateValidationService_tsickle_Closure_declarations() {\n/** @type {?} */\nStateValidationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStateValidationService.ctorParameters;\n/** @type {?} */\nStateValidationService.prototype.authWellKnownEndpoints;\n/** @type {?} */\nStateValidationService.prototype.authConfiguration;\n/** @type {?} */\nStateValidationService.prototype.oidcSecurityCommon;\n/** @type {?} */\nStateValidationService.prototype.oidcSecurityValidation;\n/** @type {?} */\nStateValidationService.prototype.tokenHelperService;\n/** @type {?} */\nStateValidationService.prototype.loggerService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { KJUR, KEYUTIL, hextob64u } from 'jsrsasign';\r\nimport { ArrayHelperService } from './oidc-array-helper.service';\r\nimport { TokenHelperService } from './oidc-token-helper.service';\r\nimport { LoggerService } from './oidc.logger.service';\nexport class OidcSecurityValidation {\n/**\n * @param {?} arrayHelperService\n * @param {?} tokenHelperService\n * @param {?} loggerService\n */\nconstructor(\nprivate arrayHelperService: ArrayHelperService,\nprivate tokenHelperService: TokenHelperService,\nprivate loggerService: LoggerService\r\n    ) {}\n/**\n * @param {?} token\n * @param {?=} offsetSeconds\n * @return {?}\n */\nisTokenExpired(token: string, offsetSeconds?: number): boolean {\r\n        let /** @type {?} */ decoded: any;\r\n        decoded = this.tokenHelperService.getPayloadFromToken(token, false);\r\n\r\n        return !this.validate_id_token_exp_not_expired(decoded, offsetSeconds);\r\n    }\n/**\n * @param {?} decoded_id_token\n * @param {?=} offsetSeconds\n * @return {?}\n */\nvalidate_id_token_exp_not_expired(\r\n        decoded_id_token: string,\r\n        offsetSeconds?: number\r\n    ): boolean {\r\n        const /** @type {?} */ tokenExpirationDate = this.tokenHelperService.getTokenExpirationDate(\r\n            decoded_id_token\r\n        );\r\n        offsetSeconds = offsetSeconds || 0;\r\n\r\n        if (!tokenExpirationDate) {\r\n            return false;\r\n        }\r\n\r\n        // Token not expired?\r\n        return (\r\n            tokenExpirationDate.valueOf() >\r\n            new Date().valueOf() + offsetSeconds * 1000\r\n        );\r\n    }\n/**\n * @param {?} dataIdToken\n * @return {?}\n */\nvalidate_required_id_token(dataIdToken: any): boolean {\r\n        let /** @type {?} */ validated = true;\r\n        if (!dataIdToken.hasOwnProperty('iss')) {\r\n            validated = false;\r\n            this.loggerService.logWarning(\r\n                'iss is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('sub')) {\r\n            validated = false;\r\n            this.loggerService.logWarning(\r\n                'sub is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('aud')) {\r\n            validated = false;\r\n            this.loggerService.logWarning(\r\n                'aud is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('exp')) {\r\n            validated = false;\r\n            this.loggerService.logWarning(\r\n                'exp is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('iat')) {\r\n            validated = false;\r\n            this.loggerService.logWarning(\r\n                'iat is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        return validated;\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} max_offset_allowed_in_seconds\n * @return {?}\n */\nvalidate_id_token_iat_max_offset(\r\n        dataIdToken: any,\r\n        max_offset_allowed_in_seconds: number\r\n    ): boolean {\r\n        if (!dataIdToken.hasOwnProperty('iat')) {\r\n            return false;\r\n        }\r\n\r\n        const /** @type {?} */ dateTime_iat_id_token = new Date(0); // The 0 here is the key, which sets the date to the epoch\r\n        dateTime_iat_id_token.setUTCSeconds(dataIdToken.iat);\r\n\r\n        max_offset_allowed_in_seconds = max_offset_allowed_in_seconds || 0;\r\n\r\n        if (dateTime_iat_id_token == null) {\r\n            return false;\r\n        }\r\n\r\n        this.loggerService.logDebug(\r\n            'validate_id_token_iat_max_offset: ' +\r\n                (new Date().valueOf() - dateTime_iat_id_token.valueOf()) +\r\n                ' < ' +\r\n                max_offset_allowed_in_seconds * 1000\r\n        );\r\n        return (\r\n            new Date().valueOf() - dateTime_iat_id_token.valueOf() <\r\n            max_offset_allowed_in_seconds * 1000\r\n        );\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} local_nonce\n * @return {?}\n */\nvalidate_id_token_nonce(dataIdToken: any, local_nonce: any): boolean {\r\n        if (dataIdToken.nonce !== local_nonce) {\r\n            this.loggerService.logDebug(\r\n                'Validate_id_token_nonce failed, dataIdToken.nonce: ' +\r\n                    dataIdToken.nonce +\r\n                    ' local_nonce:' +\r\n                    local_nonce\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} authWellKnownEndpoints_issuer\n * @return {?}\n */\nvalidate_id_token_iss(\r\n        dataIdToken: any,\r\n        authWellKnownEndpoints_issuer: any\r\n    ): boolean {\r\n        if (\r\n            ( /** @type {?} */((dataIdToken.iss as string))) !==\r\n            ( /** @type {?} */((authWellKnownEndpoints_issuer as string)))\r\n        ) {\r\n            this.loggerService.logDebug(\r\n                'Validate_id_token_iss failed, dataIdToken.iss: ' +\r\n                    dataIdToken.iss +\r\n                    ' authWellKnownEndpoints issuer:' +\r\n                    authWellKnownEndpoints_issuer\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} aud\n * @return {?}\n */\nvalidate_id_token_aud(dataIdToken: any, aud: any): boolean {\r\n        if (dataIdToken.aud instanceof Array) {\r\n            const /** @type {?} */ result = this.arrayHelperService.arraysEqual(\r\n                dataIdToken.aud,\r\n                aud\r\n            );\r\n\r\n            if (!result) {\r\n                this.loggerService.logDebug(\r\n                    'Validate_id_token_aud  array failed, dataIdToken.aud: ' +\r\n                        dataIdToken.aud +\r\n                        ' client_id:' +\r\n                        aud\r\n                );\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        } else if (dataIdToken.aud !== aud) {\r\n            this.loggerService.logDebug(\r\n                'Validate_id_token_aud failed, dataIdToken.aud: ' +\r\n                    dataIdToken.aud +\r\n                    ' client_id:' +\r\n                    aud\r\n            );\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} state\n * @param {?} local_state\n * @return {?}\n */\nvalidateStateFromHashCallback(state: any, local_state: any): boolean {\r\n        if (( /** @type {?} */((state as string))) !== ( /** @type {?} */((local_state as string)))) {\r\n            this.loggerService.logDebug(\r\n                'ValidateStateFromHashCallback failed, state: ' +\r\n                    state +\r\n                    ' local_state:' +\r\n                    local_state\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} id_token_sub\n * @param {?} userdata_sub\n * @return {?}\n */\nvalidate_userdata_sub_id_token(\r\n        id_token_sub: any,\r\n        userdata_sub: any\r\n    ): boolean {\r\n        if (( /** @type {?} */((id_token_sub as string))) !== ( /** @type {?} */((userdata_sub as string)))) {\r\n            this.loggerService.logDebug(\r\n                'validate_userdata_sub_id_token failed, id_token_sub: ' +\r\n                    id_token_sub +\r\n                    ' userdata_sub:' +\r\n                    userdata_sub\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} id_token\n * @param {?} jwtkeys\n * @return {?}\n */\nvalidate_signature_id_token(id_token: any, jwtkeys: any): boolean {\r\n        if (!jwtkeys || !jwtkeys.keys) {\r\n            return false;\r\n        }\r\n\r\n        const /** @type {?} */ header_data = this.tokenHelperService.getHeaderFromToken(\r\n            id_token,\r\n            false\r\n        );\r\n\r\n        if (\r\n            Object.keys(header_data).length === 0 &&\r\n            header_data.constructor === Object\r\n        ) {\r\n            this.loggerService.logWarning('id token has no header data');\r\n            return false;\r\n        }\r\n\r\n        const /** @type {?} */ kid = header_data.kid;\r\n        const /** @type {?} */ alg = header_data.alg;\r\n\r\n        if ('RS256' !== ( /** @type {?} */((alg as string)))) {\r\n            this.loggerService.logWarning('Only RS256 supported');\r\n            return false;\r\n        }\r\n\r\n        let /** @type {?} */ isValid = false;\r\n\r\n        if (!header_data.hasOwnProperty('kid')) {\r\n            // exactly 1 key in the jwtkeys and no kid in the Jose header\r\n            // kty\t\"RSA\" use \"sig\"\r\n            let /** @type {?} */ amountOfMatchingKeys = 0;\r\n            for (const /** @type {?} */ key of jwtkeys.keys) {\r\n                if (\r\n                    ( /** @type {?} */((key.kty as string))) === 'RSA' &&\r\n                    ( /** @type {?} */((key.use as string))) === 'sig'\r\n                ) {\r\n                    amountOfMatchingKeys = amountOfMatchingKeys + 1;\r\n                }\r\n            }\r\n\r\n            if (amountOfMatchingKeys === 0) {\r\n                this.loggerService.logWarning(\r\n                    'no keys found, incorrect Signature, validation failed for id_token'\r\n                );\r\n                return false;\r\n            } else if (amountOfMatchingKeys > 1) {\r\n                this.loggerService.logWarning(\r\n                    'no ID Token kid claim in JOSE header and multiple supplied in jwks_uri'\r\n                );\r\n                return false;\r\n            } else {\r\n                for (const /** @type {?} */ key of jwtkeys.keys) {\r\n                    if (\r\n                        ( /** @type {?} */((key.kty as string))) === 'RSA' &&\r\n                        ( /** @type {?} */((key.use as string))) === 'sig'\r\n                    ) {\r\n                        const /** @type {?} */ publickey = KEYUTIL.getKey(key);\r\n                        isValid = KJUR.jws.JWS.verify(id_token, publickey, [\r\n                            'RS256'\r\n                        ]);\r\n                        if (!isValid) {\r\n                            this.loggerService.logWarning(\r\n                                'incorrect Signature, validation failed for id_token'\r\n                            );\r\n                        }\r\n                        return isValid;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            // kid in the Jose header of id_token\r\n            for (const /** @type {?} */ key of jwtkeys.keys) {\r\n                if (( /** @type {?} */((key.kid as string))) === ( /** @type {?} */((kid as string)))) {\r\n                    const /** @type {?} */ publickey = KEYUTIL.getKey(key);\r\n                    isValid = KJUR.jws.JWS.verify(id_token, publickey, [\r\n                        'RS256'\r\n                    ]);\r\n                    if (!isValid) {\r\n                        this.loggerService.logWarning(\r\n                            'incorrect Signature, validation failed for id_token'\r\n                        );\r\n                    }\r\n                    return isValid;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\n/**\n * @param {?} response_type\n * @return {?}\n */\nconfig_validate_response_type(response_type: string): boolean {\r\n        if (\r\n            response_type === 'id_token token' ||\r\n            response_type === 'id_token'\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        this.loggerService.logWarning(\r\n            'module configure incorrect, invalid response_type:' + response_type\r\n        );\r\n        return false;\r\n    }\n/**\n * @param {?} access_token\n * @param {?} at_hash\n * @return {?}\n */\nvalidate_id_token_at_hash(access_token: any, at_hash: any): boolean {\r\n        this.loggerService.logDebug('From the server:' + at_hash);\r\n        const /** @type {?} */ testdata = this.generate_at_hash('' + access_token);\r\n        this.loggerService.logDebug(\r\n            'client validation not decoded:' + testdata\r\n        );\r\n        if (testdata === ( /** @type {?} */((at_hash as string)))) {\r\n            return true; // isValid;\r\n        } else {\r\n            const /** @type {?} */ testValue = this.generate_at_hash(\r\n                '' + decodeURIComponent(access_token)\r\n            );\r\n            this.loggerService.logDebug('-gen access--' + testValue);\r\n            if (testValue === ( /** @type {?} */((at_hash as string)))) {\r\n                return true; // isValid\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\n/**\n * @param {?} access_token\n * @return {?}\n */\nprivate generate_at_hash(access_token: any): string {\r\n        const /** @type {?} */ hash = KJUR.crypto.Util.hashString(access_token, 'sha256');\r\n        const /** @type {?} */ first128bits = hash.substr(0, hash.length / 2);\r\n        const /** @type {?} */ testdata = hextob64u(first128bits);\r\n\r\n        return testdata;\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ArrayHelperService, },\n{type: TokenHelperService, },\n{type: LoggerService, },\n];\n}\n\nfunction OidcSecurityValidation_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityValidation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityValidation.ctorParameters;\n/** @type {?} */\nOidcSecurityValidation.prototype.arrayHelperService;\n/** @type {?} */\nOidcSecurityValidation.prototype.tokenHelperService;\n/** @type {?} */\nOidcSecurityValidation.prototype.loggerService;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { AuthConfiguration } from '../modules/auth.configuration';\nexport class LoggerService {\n/**\n * @param {?} authConfiguration\n */\nconstructor(private authConfiguration: AuthConfiguration) {}\n/**\n * @param {?} message\n * @return {?}\n */\nlogError(message: any) {\n        console.error(message);\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nlogWarning(message: any) {\n        if (this.authConfiguration.log_console_warning_active) {\n            console.warn(message);\n        }\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nlogDebug(message: any) {\n        if (this.authConfiguration.log_console_debug_active) {\n            console.log(message);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n];\n}\n\nfunction LoggerService_tsickle_Closure_declarations() {\n/** @type {?} */\nLoggerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLoggerService.ctorParameters;\n/** @type {?} */\nLoggerService.prototype.authConfiguration;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nexport class TokenHelperService {\nconstructor() {}\n/**\n * @param {?} dataIdToken\n * @return {?}\n */\ngetTokenExpirationDate(dataIdToken: any): Date {\n        if (!dataIdToken.hasOwnProperty('exp')) {\n            return new Date();\n        }\n\n        const /** @type {?} */ date = new Date(0); // The 0 here is the key, which sets the date to the epoch\n        date.setUTCSeconds(dataIdToken.exp);\n\n        return date;\n    }\n/**\n * @param {?} token\n * @param {?} encode\n * @return {?}\n */\ngetPayloadFromToken(token: any, encode: boolean) {\n        let /** @type {?} */ data = {};\n        if (typeof token !== 'undefined') {\n            const /** @type {?} */ encoded = token.split('.')[1];\n            if (encode) {\n                return encoded;\n            }\n            data = JSON.parse(this.urlBase64Decode(encoded));\n        }\n\n        return data;\n    }\n/**\n * @param {?} token\n * @param {?} encode\n * @return {?}\n */\ngetHeaderFromToken(token: any, encode: boolean) {\n        let /** @type {?} */ data = {};\n        if (typeof token !== 'undefined') {\n            const /** @type {?} */ encoded = token.split('.')[0];\n            if (encode) {\n                return encoded;\n            }\n            data = JSON.parse(this.urlBase64Decode(encoded));\n        }\n\n        return data;\n    }\n/**\n * @param {?} token\n * @param {?} encode\n * @return {?}\n */\ngetSignatureFromToken(token: any, encode: boolean) {\n        let /** @type {?} */ data = {};\n        if (typeof token !== 'undefined') {\n            const /** @type {?} */ encoded = token.split('.')[2];\n            if (encode) {\n                return encoded;\n            }\n            data = JSON.parse(this.urlBase64Decode(encoded));\n        }\n\n        return data;\n    }\n/**\n * @param {?} str\n * @return {?}\n */\nurlBase64Decode(str: string) {\n        let /** @type {?} */ output = str.replace('-', '+').replace('_', '/');\n        switch (output.length % 4) {\n            case 0:\n                break;\n            case 2:\n                output += '==';\n                break;\n            case 3:\n                output += '=';\n                break;\n            default:\n                throw Error('Illegal base64url string!');\n        }\n\n        return window.atob(output);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TokenHelperService_tsickle_Closure_declarations() {\n/** @type {?} */\nTokenHelperService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTokenHelperService.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nexport class ArrayHelperService {\nconstructor() {}\n/**\n * @param {?} arr1\n * @param {?} arr2\n * @return {?}\n */\narraysEqual(arr1: Array<string>, arr2: Array<string>) {\n        if (arr1.length !== arr2.length) {\n            return false;\n        }\n\n        for (let /** @type {?} */ i = arr1.length; i--; ) {\n            if (arr1[i] !== arr2[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ArrayHelperService_tsickle_Closure_declarations() {\n/** @type {?} */\nArrayHelperService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nArrayHelperService.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { OidcSecurityStorage } from './oidc.security.storage';\r\n\r\nexport type SilentRenewState = 'running' | '';\nexport class OidcSecurityCommon {\nprivate storage_auth_result = 'authorizationResult';\n/**\n * @return {?}\n */\npublic get authResult(): any {\r\n        return this.retrieve(this.storage_auth_result);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set authResult(value: any) {\r\n        this.store(this.storage_auth_result, value);\r\n    }\nprivate storage_access_token = 'authorizationData';\n/**\n * @return {?}\n */\npublic get accessToken(): string {\r\n        return this.retrieve(this.storage_access_token) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set accessToken(value: string) {\r\n        this.store(this.storage_access_token, value);\r\n    }\nprivate storage_id_token = 'authorizationDataIdToken';\n/**\n * @return {?}\n */\npublic get idToken(): string {\r\n        return this.retrieve(this.storage_id_token) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set idToken(value: string) {\r\n        this.store(this.storage_id_token, value);\r\n    }\nprivate storage_is_authorized = '_isAuthorized';\n/**\n * @return {?}\n */\npublic get isAuthorized(): boolean | undefined {\r\n        return this.retrieve(this.storage_is_authorized);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set isAuthorized(value: boolean | undefined) {\r\n        this.store(this.storage_is_authorized, value);\r\n    }\nprivate storage_user_data = 'userData';\n/**\n * @return {?}\n */\npublic get userData(): any {\r\n        return this.retrieve(this.storage_user_data);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set userData(value: any) {\r\n        this.store(this.storage_user_data, value);\r\n    }\nprivate storage_auth_nonce = 'authNonce';\n/**\n * @return {?}\n */\npublic get authNonce(): string {\r\n        return this.retrieve(this.storage_auth_nonce) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set authNonce(value: string) {\r\n        this.store(this.storage_auth_nonce, value);\r\n    }\nprivate storage_auth_state_control = 'authStateControl';\n/**\n * @return {?}\n */\npublic get authStateControl(): string {\r\n        return this.retrieve(this.storage_auth_state_control) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set authStateControl(value: string) {\r\n        this.store(this.storage_auth_state_control, value);\r\n    }\nprivate storage_session_state = 'session_state';\n/**\n * @return {?}\n */\npublic get sessionState(): any {\r\n        return this.retrieve(this.storage_session_state);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set sessionState(value: any) {\r\n        this.store(this.storage_session_state, value);\r\n    }\nprivate storage_silent_renew_running = 'storage_silent_renew_running';\n/**\n * @return {?}\n */\npublic get silentRenewRunning(): SilentRenewState {\r\n        return this.retrieve(this.storage_silent_renew_running) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set silentRenewRunning(value: SilentRenewState) {\r\n        this.store(this.storage_silent_renew_running, value);\r\n    }\nprivate storage_custom_request_params = 'storage_custom_request_params';\n/**\n * @return {?}\n */\npublic get customRequestParams(): {\r\n        [key: string]: string | number | boolean;\r\n    } {\r\n        return this.retrieve(this.storage_custom_request_params);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set customRequestParams(value: {\r\n        [key: string]: string | number | boolean;\r\n    }) {\r\n        this.store(this.storage_custom_request_params, value);\r\n    }\n/**\n * @param {?} oidcSecurityStorage\n */\nconstructor(private oidcSecurityStorage: OidcSecurityStorage) {}\n/**\n * @return {?}\n */\nsetupModule() {}\n/**\n * @param {?} key\n * @return {?}\n */\nprivate retrieve(key: string): any {\r\n        return this.oidcSecurityStorage.read(key);\r\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nprivate store(key: string, value: any) {\r\n        this.oidcSecurityStorage.write(key, value);\r\n    }\n/**\n * @param {?} isRenewProcess\n * @return {?}\n */\nresetStorageData(isRenewProcess: boolean) {\r\n        if (!isRenewProcess) {\r\n            this.store(this.storage_auth_result, '');\r\n            this.store(this.storage_session_state, '');\r\n            this.store(this.storage_silent_renew_running, '');\r\n            this.store(this.storage_is_authorized, false);\r\n            this.store(this.storage_access_token, '');\r\n            this.store(this.storage_id_token, '');\r\n            this.store(this.storage_user_data, '');\r\n        }\r\n    }\n/**\n * @return {?}\n */\ngetAccessToken(): any {\r\n        return this.retrieve(this.storage_access_token);\r\n    }\n/**\n * @return {?}\n */\ngetIdToken(): any {\r\n        return this.retrieve(this.storage_id_token);\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OidcSecurityStorage, },\n];\n}\n\nfunction OidcSecurityCommon_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityCommon.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityCommon.ctorParameters;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_auth_result;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_access_token;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_id_token;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_is_authorized;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_user_data;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_auth_nonce;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_auth_state_control;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_session_state;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_silent_renew_running;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_custom_request_params;\n/** @type {?} */\nOidcSecurityCommon.prototype.oidcSecurityStorage;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { AuthConfiguration } from '../modules/auth.configuration';\n/**\n * Implement this class-interface to create a custom storage.\n * @abstract\n */\nexport abstract class OidcSecurityStorage {\n/**\n * This method must contain the logic to read the storage.\n * @abstract\n * @param {?} key\n * @return {?} The value of the given key\n */\nread(key: string) {}\n/**\n * This method must contain the logic to write the storage.\n * @abstract\n * @param {?} key\n * @param {?} value The value for the given key\n * @return {?}\n */\nwrite(key: string, value: any) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction OidcSecurityStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityStorage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityStorage.ctorParameters;\n}\n\nexport class BrowserStorage implements OidcSecurityStorage {\nprivate hasStorage: boolean;\n/**\n * @param {?} authConfiguration\n */\nconstructor(private authConfiguration: AuthConfiguration) {\n        this.hasStorage = typeof Storage !== 'undefined';\n    }\n/**\n * @param {?} key\n * @return {?}\n */\npublic read(key: string): any {\n        if (this.hasStorage) {\n            return JSON.parse(this.authConfiguration.storage.getItem(key));\n        }\n\n        return;\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\npublic write(key: string, value: any): void {\n        if (this.hasStorage) {\n            value = value === undefined ? null : value;\n            this.authConfiguration.storage.setItem(key, JSON.stringify(value));\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n];\n}\n\nfunction BrowserStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserStorage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserStorage.ctorParameters;\n/** @type {?} */\nBrowserStorage.prototype.hasStorage;\n/** @type {?} */\nBrowserStorage.prototype.authConfiguration;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nexport class DefaultConfiguration {\r\n    stsServer = 'https://localhost:44318';\r\n    redirect_url = 'https://localhost:44311';\r\n    // The Client MUST validate that the aud (audience) Claim contains its client_id value registered at the Issuer identified\r\n    // by the iss (issuer) Claim as an audience.\r\n    // The ID Token MUST be rejected if the ID Token does not list the Client as a valid audience,\r\n    // or if it contains additional audiences not trusted by the Client.\r\n    client_id = 'angularclient';\r\n    response_type = 'id_token token';\r\n    // For some oidc, we require resource identifier to be provided along with the request.\r\n    resource = '';\r\n    scope = 'openid email profile';\r\n    // Only for Google Auth with particular G Suite domain, see https://developers.google.com/identity/protocols/OpenIDConnect#hd-param\r\n    hd_param = '';\r\n    post_logout_redirect_uri = 'https://localhost:44311/unauthorized';\r\n    start_checksession = false;\r\n    silent_renew = true;\r\n    silent_renew_offset_in_seconds = 0;\r\n    silent_redirect_url = 'https://localhost:44311';\r\n    post_login_route = '/';\r\n    // HTTP 403\r\n    forbidden_route = '/forbidden';\r\n    // HTTP 401\r\n    unauthorized_route = '/unauthorized';\r\n    auto_userinfo = true;\r\n    auto_clean_state_after_authentication: true;\r\n    trigger_authorization_result_event: false;\r\n    log_console_warning_active = true;\r\n    log_console_debug_active = false;\r\n\r\n    // id_token C8: The iat Claim can be used to reject tokens that were issued too far away from the current time,\r\n    // limiting the amount of time that nonces need to be stored to prevent attacks.The acceptable range is Client specific.\r\n    max_id_token_iat_offset_allowed_in_seconds = 3;\r\n\r\n    storage = typeof Storage !== 'undefined' ? sessionStorage : null;\r\n}\n\nfunction DefaultConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultConfiguration.prototype.stsServer;\n/** @type {?} */\nDefaultConfiguration.prototype.redirect_url;\n/** @type {?} */\nDefaultConfiguration.prototype.client_id;\n/** @type {?} */\nDefaultConfiguration.prototype.response_type;\n/** @type {?} */\nDefaultConfiguration.prototype.resource;\n/** @type {?} */\nDefaultConfiguration.prototype.scope;\n/** @type {?} */\nDefaultConfiguration.prototype.hd_param;\n/** @type {?} */\nDefaultConfiguration.prototype.post_logout_redirect_uri;\n/** @type {?} */\nDefaultConfiguration.prototype.start_checksession;\n/** @type {?} */\nDefaultConfiguration.prototype.silent_renew;\n/** @type {?} */\nDefaultConfiguration.prototype.silent_renew_offset_in_seconds;\n/** @type {?} */\nDefaultConfiguration.prototype.silent_redirect_url;\n/** @type {?} */\nDefaultConfiguration.prototype.post_login_route;\n/** @type {?} */\nDefaultConfiguration.prototype.forbidden_route;\n/** @type {?} */\nDefaultConfiguration.prototype.unauthorized_route;\n/** @type {?} */\nDefaultConfiguration.prototype.auto_userinfo;\n/** @type {?} */\nDefaultConfiguration.prototype.auto_clean_state_after_authentication;\n/** @type {?} */\nDefaultConfiguration.prototype.trigger_authorization_result_event;\n/** @type {?} */\nDefaultConfiguration.prototype.log_console_warning_active;\n/** @type {?} */\nDefaultConfiguration.prototype.log_console_debug_active;\n/** @type {?} */\nDefaultConfiguration.prototype.max_id_token_iat_offset_allowed_in_seconds;\n/** @type {?} */\nDefaultConfiguration.prototype.storage;\n}\n\nexport class OpenIDImplicitFlowConfiguration {\r\n    stsServer: string;\r\n    redirect_url: string;\r\n    client_id: string;\r\n    response_type: string;\r\n    resource: string;\r\n    scope: string;\r\n    hd_param: string;\r\n    post_logout_redirect_uri: string;\r\n    start_checksession: boolean;\r\n    silent_renew: boolean;\r\n    silent_renew_offset_in_seconds: number;\r\n    silent_renew_url: string;\r\n    post_login_route: string;\r\n    forbidden_route: string;\r\n    unauthorized_route: string;\r\n    auto_userinfo: boolean;\r\n    auto_clean_state_after_authentication: boolean;\r\n    trigger_authorization_result_event: boolean;\r\n    log_console_warning_active: boolean;\r\n    log_console_debug_active: boolean;\r\n    max_id_token_iat_offset_allowed_in_seconds: number;\r\n    storage: any;\r\n}\n\nfunction OpenIDImplicitFlowConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.stsServer;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.redirect_url;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.client_id;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.response_type;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.resource;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.scope;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.hd_param;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.post_logout_redirect_uri;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.start_checksession;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.silent_renew;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.silent_renew_offset_in_seconds;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.silent_renew_url;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.post_login_route;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.forbidden_route;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.unauthorized_route;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.auto_userinfo;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.auto_clean_state_after_authentication;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.trigger_authorization_result_event;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.log_console_warning_active;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.log_console_debug_active;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.max_id_token_iat_offset_allowed_in_seconds;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.storage;\n}\n\nexport class AuthConfiguration {\nprivate openIDImplicitFlowConfiguration: OpenIDImplicitFlowConfiguration;\n/**\n * @return {?}\n */\nget stsServer(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.stsServer ||\r\n            this.defaultConfig.stsServer\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget redirect_url(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.redirect_url ||\r\n            this.defaultConfig.redirect_url\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget silent_redirect_url(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.silent_renew_url ||\r\n            this.defaultConfig.silent_redirect_url\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget client_id(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.client_id ||\r\n            this.defaultConfig.client_id\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget response_type(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.response_type ||\r\n            this.defaultConfig.response_type\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget resource(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.resource ||\r\n            this.defaultConfig.resource\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget scope(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.scope ||\r\n            this.defaultConfig.scope\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget hd_param(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.hd_param ||\r\n            this.defaultConfig.hd_param\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget post_logout_redirect_uri(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.post_logout_redirect_uri ||\r\n            this.defaultConfig.post_logout_redirect_uri\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget start_checksession(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.start_checksession !==\r\n            undefined\r\n            ? this.openIDImplicitFlowConfiguration.start_checksession\r\n            : this.defaultConfig.start_checksession;\r\n    }\n/**\n * @return {?}\n */\nget silent_renew(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.silent_renew !== undefined\r\n            ? this.openIDImplicitFlowConfiguration.silent_renew\r\n            : this.defaultConfig.silent_renew;\r\n    }\n/**\n * @return {?}\n */\nget silent_renew_offset_in_seconds(): number {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration\r\n                .silent_renew_offset_in_seconds ||\r\n            this.defaultConfig.silent_renew_offset_in_seconds\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget post_login_route(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.post_login_route ||\r\n            this.defaultConfig.post_login_route\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget forbidden_route(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.forbidden_route ||\r\n            this.defaultConfig.forbidden_route\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget unauthorized_route(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.unauthorized_route ||\r\n            this.defaultConfig.unauthorized_route\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget auto_userinfo(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.auto_userinfo !== undefined\r\n            ? this.openIDImplicitFlowConfiguration.auto_userinfo\r\n            : this.defaultConfig.auto_userinfo;\r\n    }\n/**\n * @return {?}\n */\nget auto_clean_state_after_authentication(): boolean {\r\n        return this.openIDImplicitFlowConfiguration\r\n            .auto_clean_state_after_authentication !== undefined\r\n            ? this.openIDImplicitFlowConfiguration\r\n                  .auto_clean_state_after_authentication\r\n            : this.defaultConfig.auto_clean_state_after_authentication;\r\n    }\n/**\n * @return {?}\n */\nget trigger_authorization_result_event(): boolean {\r\n        return this.openIDImplicitFlowConfiguration\r\n            .trigger_authorization_result_event !== undefined\r\n            ? this.openIDImplicitFlowConfiguration\r\n                  .trigger_authorization_result_event\r\n            : this.defaultConfig.trigger_authorization_result_event;\r\n    }\n/**\n * @return {?}\n */\nget log_console_warning_active(): boolean {\r\n        return this.openIDImplicitFlowConfiguration\r\n            .log_console_warning_active !== undefined\r\n            ? this.openIDImplicitFlowConfiguration.log_console_warning_active\r\n            : this.defaultConfig.log_console_warning_active;\r\n    }\n/**\n * @return {?}\n */\nget log_console_debug_active(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.log_console_debug_active !==\r\n            undefined\r\n            ? this.openIDImplicitFlowConfiguration.log_console_debug_active\r\n            : this.defaultConfig.log_console_debug_active;\r\n    }\n/**\n * @return {?}\n */\nget max_id_token_iat_offset_allowed_in_seconds(): number {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration\r\n                .max_id_token_iat_offset_allowed_in_seconds ||\r\n            this.defaultConfig.max_id_token_iat_offset_allowed_in_seconds\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget storage(): any {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.storage ||\r\n            this.defaultConfig.storage\r\n        );\r\n    }\n/**\n * @param {?} defaultConfig\n */\nconstructor(private defaultConfig: DefaultConfiguration) {}\n/**\n * @param {?} openIDImplicitFlowConfiguration\n * @return {?}\n */\ninit(openIDImplicitFlowConfiguration: OpenIDImplicitFlowConfiguration) {\r\n        this.openIDImplicitFlowConfiguration = openIDImplicitFlowConfiguration;\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DefaultConfiguration, },\n];\n}\n\nfunction AuthConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthConfiguration.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuthConfiguration.ctorParameters;\n/** @type {?} */\nAuthConfiguration.prototype.openIDImplicitFlowConfiguration;\n/** @type {?} */\nAuthConfiguration.prototype.defaultConfig;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class ValidateStateResult {\n/**\n * @param {?=} access_token\n * @param {?=} id_token\n * @param {?=} authResponseIsValid\n * @param {?=} decoded_id_token\n */\nconstructor(\npublic access_token = '',\npublic id_token = '',\npublic authResponseIsValid = false,\npublic decoded_id_token: any\n    ) {}\n}\n\nfunction ValidateStateResult_tsickle_Closure_declarations() {\n/** @type {?} */\nValidateStateResult.prototype.access_token;\n/** @type {?} */\nValidateStateResult.prototype.id_token;\n/** @type {?} */\nValidateStateResult.prototype.authResponseIsValid;\n/** @type {?} */\nValidateStateResult.prototype.decoded_id_token;\n}\n\n","\nexport type AuthorizationResult = number;\nexport let AuthorizationResult: any = {};\nAuthorizationResult.authorized = 1;\nAuthorizationResult.forbidden = 2;\nAuthorizationResult.unauthorized = 3;\nAuthorizationResult[AuthorizationResult.authorized] = \"authorized\";\nAuthorizationResult[AuthorizationResult.forbidden] = \"forbidden\";\nAuthorizationResult[AuthorizationResult.unauthorized] = \"unauthorized\";\n\n","import { Injectable, EventEmitter, Output } from '@angular/core';\nexport class OidcConfigService {\r\n   onConfigurationLoaded = new EventEmitter<boolean>();\r\n  clientConfiguration: any;\r\n  wellKnownEndpoints: any;\n/**\n * @param {?} configUrl\n * @return {?}\n */\nasync load(configUrl: string) {\r\n    try {\r\n      const /** @type {?} */ response = await fetch(configUrl);\r\n      if (!response.ok) {\r\n        throw new Error(response.statusText);\r\n      }\r\n\r\n      this.clientConfiguration = await response.json();\r\n      await this.load_using_stsServer(this.clientConfiguration.stsServer);\r\n    } catch ( /** @type {?} */err) {\r\n      console.error(\r\n        `OidcConfigService 'load' threw an error on calling ${configUrl}`,\r\n        err\r\n      );\r\n      this.onConfigurationLoaded.emit(false);\r\n    }\r\n  }\n/**\n * @param {?} stsServer\n * @return {?}\n */\nasync load_using_stsServer(stsServer: string) {\r\n    try {\r\n      const /** @type {?} */ response = await fetch(\r\n        `${stsServer}/.well-known/openid-configuration`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(response.statusText);\r\n      }\r\n\r\n      this.wellKnownEndpoints = await response.json();\r\n      this.onConfigurationLoaded.emit(true);\r\n    } catch ( /** @type {?} */err) {\r\n      console.error(\r\n        `OidcConfigService 'load_using_stsServer' threw an error on calling ${stsServer}`,\r\n        err\r\n      );\r\n      this.onConfigurationLoaded.emit(false);\r\n    }\r\n  }\n/**\n * @param {?} stsServer\n * @return {?}\n */\nasync load_using_custom_stsServer(stsServer: string) {\r\n    try {\r\n      const /** @type {?} */ response = await fetch(stsServer);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(response.statusText);\r\n      }\r\n      this.wellKnownEndpoints = await response.json();\r\n      this.onConfigurationLoaded.emit(true);\r\n    } catch ( /** @type {?} */err) {\r\n      console.error(\r\n        `OidcConfigService 'load_using_custom_stsServer' threw an error on calling ${stsServer}`,\r\n        err\r\n      );\r\n      this.onConfigurationLoaded.emit(false);\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onConfigurationLoaded': [{ type: Output },],\n};\n}\n\nfunction OidcConfigService_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcConfigService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcConfigService.ctorParameters;\n/** @type {?} */\nOidcConfigService.propDecorators;\n/** @type {?} */\nOidcConfigService.prototype.onConfigurationLoaded;\n/** @type {?} */\nOidcConfigService.prototype.clientConfiguration;\n/** @type {?} */\nOidcConfigService.prototype.wellKnownEndpoints;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["NgModule","Output","NgZone","Router","Inject","PLATFORM_ID","Injectable","Observable","catchError","HttpParams","isPlatformBrowser","BehaviorSubject","EventEmitter","map","HttpClient","HttpHeaders","hextob64u","KJUR","KEYUTIL"],"mappings":"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"}