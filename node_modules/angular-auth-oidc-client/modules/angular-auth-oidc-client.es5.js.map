{"version":3,"file":"angular-auth-oidc-client.es5.js","sources":["../../index.ts","../../public_api.ts","../../src/angular-auth-oidc-client.ts","../../src/modules/auth.module.ts","../../src/models/jwtkeys.ts","../../src/models/auth.well-known-endpoints.ts","../../src/services/oidc.security.service.ts","../../src/services/uri-encoder.ts","../../src/services/oidc.security.user-service.ts","../../src/services/oidc-data.service.ts","../../src/services/oidc.security.silent-renew.ts","../../src/services/oidc.security.check-session.ts","../../src/services/oidc-security-state-validation.service.ts","../../src/services/oidc.security.validation.ts","../../src/services/oidc.logger.service.ts","../../src/services/oidc-token-helper.service.ts","../../src/services/oidc-array-helper.service.ts","../../src/services/oidc.security.common.ts","../../src/services/oidc.security.storage.ts","../../src/modules/auth.configuration.ts","../../src/models/validate-state-result.model.ts","../../src/models/authorization-result.enum.ts","../../src/services/oidc.security.config.service.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {OidcConfigService,OidcSecurityService,OidcSecurityStorage,BrowserStorage,AuthWellKnownEndpoints,AuthorizationResult,JwtKeys,JwtKey,ValidateStateResult,DefaultConfiguration,OpenIDImplicitFlowConfiguration,AuthConfiguration,AuthModule,Type,Token,OidcSecurityValidation} from './public_api';\n\nexport {ArrayHelperService as ɵd} from './src/services/oidc-array-helper.service';\nexport {OidcDataService as ɵa} from './src/services/oidc-data.service';\nexport {StateValidationService as ɵb} from './src/services/oidc-security-state-validation.service';\nexport {TokenHelperService as ɵe} from './src/services/oidc-token-helper.service';\nexport {LoggerService as ɵf} from './src/services/oidc.logger.service';\nexport {OidcSecurityCheckSession as ɵg} from './src/services/oidc.security.check-session';\nexport {OidcSecurityCommon as ɵc} from './src/services/oidc.security.common';\nexport {OidcSecuritySilentRenew as ɵh} from './src/services/oidc.security.silent-renew';\nexport {OidcSecurityUserService as ɵi} from './src/services/oidc.security.user-service';","/**\n * Angular OpenID Connect Implicit Flow.\n * OpenID Connect Implicit Flow RP Client\n * Written by Damien Bowden.\n * MIT license.\n * https://github.com/damienbod/angular-auth-oidc-client\n */\n\nexport {OidcConfigService,OidcSecurityService,OidcSecurityStorage,BrowserStorage,AuthWellKnownEndpoints,AuthorizationResult,JwtKeys,JwtKey,ValidateStateResult,DefaultConfiguration,OpenIDImplicitFlowConfiguration,AuthConfiguration,AuthModule,Type,Token,OidcSecurityValidation} from './src/angular-auth-oidc-client';\n","// Public classes.\n\nexport {OidcConfigService} from './services/oidc.security.config.service';\nexport {OidcSecurityService} from './services/oidc.security.service';\nexport {OidcSecurityStorage,BrowserStorage} from './services/oidc.security.storage';\n\n\nexport {AuthWellKnownEndpoints} from './models/auth.well-known-endpoints';\nexport {AuthorizationResult} from './models/authorization-result.enum';\nexport {JwtKeys,JwtKey} from './models/jwtkeys';\nexport {ValidateStateResult} from './models/validate-state-result.model';\n\nexport {DefaultConfiguration,OpenIDImplicitFlowConfiguration,AuthConfiguration} from './modules/auth.configuration';\nexport {AuthModule,Type,Token} from './modules/auth.module';\n\nexport {OidcSecurityValidation} from './services/oidc.security.validation';\n","import { ArrayHelperService } from '../services/oidc-array-helper.service';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { OidcSecurityService } from '../services/oidc.security.service';\nimport { AuthConfiguration, DefaultConfiguration } from './auth.configuration';\nimport { OidcSecurityValidation } from '../services/oidc.security.validation';\nimport { OidcSecurityCheckSession } from '../services/oidc.security.check-session';\nimport { OidcSecuritySilentRenew } from '../services/oidc.security.silent-renew';\nimport { OidcSecurityUserService } from '../services/oidc.security.user-service';\nimport { OidcSecurityCommon } from '../services/oidc.security.common';\nimport {\n    OidcSecurityStorage,\n    BrowserStorage\n} from '../services/oidc.security.storage';\nimport { StateValidationService } from '../services/oidc-security-state-validation.service';\nimport { OidcDataService } from '../services/oidc-data.service';\nimport { TokenHelperService } from '../services/oidc-token-helper.service';\nimport { LoggerService } from '../services/oidc.logger.service';\nimport { OidcConfigService } from '../services/oidc.security.config.service';\r\nimport { AuthWellKnownEndpoints } from '../models/auth.well-known-endpoints';\nexport class AuthModule {\n/**\n * @param {?=} token\n * @return {?}\n */\nstatic forRoot(token: Token = {}): ModuleWithProviders {\n        return {\n            ngModule: AuthModule,\n            providers: [\n                OidcConfigService,\n                OidcSecurityService,\n                OidcSecurityValidation,\n                OidcSecurityCheckSession,\n                OidcSecuritySilentRenew,\n                OidcSecurityUserService,\n                OidcSecurityCommon,\n                AuthConfiguration,\n                TokenHelperService,\n                LoggerService,\n                DefaultConfiguration,\n                ArrayHelperService,\n                AuthWellKnownEndpoints,\n                OidcDataService,\n                StateValidationService,\n                {\n                    provide: OidcSecurityStorage,\n                    useClass: token.storage || BrowserStorage\n                }\n            ]\n        };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AuthModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuthModule.ctorParameters;\n}\n\n\nexport interface Type<T> extends Function {\n    new (...args: any[]): T;\n}\n\nexport interface Token {\n    storage?: Type<any>;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class JwtKeys {\n    keys: JwtKey[];\n}\n\nfunction JwtKeys_tsickle_Closure_declarations() {\n/** @type {?} */\nJwtKeys.prototype.keys;\n}\n\nexport class JwtKey {\n    kty: string;\n    use: string;\n    kid: string;\n    x5t: string;\n    e: string;\n    n: string;\n    x5c: any[];\n}\n\nfunction JwtKey_tsickle_Closure_declarations() {\n/** @type {?} */\nJwtKey.prototype.kty;\n/** @type {?} */\nJwtKey.prototype.use;\n/** @type {?} */\nJwtKey.prototype.kid;\n/** @type {?} */\nJwtKey.prototype.x5t;\n/** @type {?} */\nJwtKey.prototype.e;\n/** @type {?} */\nJwtKey.prototype.n;\n/** @type {?} */\nJwtKey.prototype.x5c;\n}\n","\nexport class AuthWellKnownEndpoints {\r\n\r\n    issuer: string;\r\n    jwks_uri: string;\r\n    authorization_endpoint: string;\r\n    token_endpoint: string;\r\n    userinfo_endpoint: string;\r\n    end_session_endpoint: string;\r\n    check_session_iframe: string;\r\n    revocation_endpoint: string;\r\n    introspection_endpoint: string;\n/**\n * @param {?} data\n * @return {?}\n */\npublic setWellKnownEndpoints(data: any) {\r\n        this.issuer = data.issuer;\r\n        this.jwks_uri = data.jwks_uri;\r\n        this.authorization_endpoint = data.authorization_endpoint;\r\n        this.token_endpoint = data.token_endpoint;\r\n        this.userinfo_endpoint = data.userinfo_endpoint;\r\n\r\n        if (data.end_session_endpoint) {\r\n            this.end_session_endpoint = data.end_session_endpoint;\r\n        }\r\n\r\n        if (data.check_session_iframe) {\r\n            this.check_session_iframe = data.check_session_iframe;\r\n        }\r\n\r\n        if (data.revocation_endpoint) {\r\n            this.revocation_endpoint = data.revocation_endpoint;\r\n        }\r\n\r\n        if (data.introspection_endpoint) {\r\n            this.introspection_endpoint = data.introspection_endpoint;\r\n        }\r\n    }\r\n}\n\nfunction AuthWellKnownEndpoints_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.issuer;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.jwks_uri;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.authorization_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.token_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.userinfo_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.end_session_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.check_session_iframe;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.revocation_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.introspection_endpoint;\n}\n\r\n","import { isPlatformBrowser } from '@angular/common';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Inject, PLATFORM_ID, NgZone } from '@angular/core';\r\nimport { EventEmitter, Injectable, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthorizationResult } from '../models/authorization-result.enum';\r\nimport { JwtKeys } from '../models/jwtkeys';\r\nimport { ValidateStateResult } from '../models/validate-state-result.model';\r\nimport {\r\n    AuthConfiguration,\r\n    OpenIDImplicitFlowConfiguration\r\n} from '../modules/auth.configuration';\r\nimport { StateValidationService } from './oidc-security-state-validation.service';\r\nimport { OidcSecurityCheckSession } from './oidc.security.check-session';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { OidcSecuritySilentRenew } from './oidc.security.silent-renew';\r\nimport { OidcSecurityUserService } from './oidc.security.user-service';\r\nimport { OidcSecurityValidation } from './oidc.security.validation';\r\nimport { UriEncoder } from './uri-encoder';\r\nimport { OidcDataService } from './oidc-data.service';\r\nimport { TokenHelperService } from './oidc-token-helper.service';\r\nimport { LoggerService } from './oidc.logger.service';\r\nimport { AuthWellKnownEndpoints } from '../models/auth.well-known-endpoints';\nexport class OidcSecurityService {\r\n     onModuleSetup = new EventEmitter<boolean>();\r\n     onAuthorizationResult = new EventEmitter<AuthorizationResult>();\r\n     onCheckSessionChanged = new EventEmitter<boolean>();\r\n\r\n    checkSessionChanged: boolean;\r\n    moduleSetup = false;\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints;\nprivate _isAuthorized = new BehaviorSubject<boolean>(false);\nprivate _isAuthorizedValue: boolean;\nprivate lastUserData: any;\nprivate _userData = new BehaviorSubject<any>('');\nprivate authWellKnownEndpointsLoaded = false;\nprivate runTokenValidationRunning: boolean;\nprivate _scheduledHeartBeat: any;\nprivate boundSilentRenewEvent: any;\n/**\n * @param {?} platformId\n * @param {?} oidcDataService\n * @param {?} stateValidationService\n * @param {?} authConfiguration\n * @param {?} router\n * @param {?} oidcSecurityCheckSession\n * @param {?} oidcSecuritySilentRenew\n * @param {?} oidcSecurityUserService\n * @param {?} oidcSecurityCommon\n * @param {?} oidcSecurityValidation\n * @param {?} tokenHelperService\n * @param {?} loggerService\n * @param {?} zone\n */\nconstructor(\nprivate platformId: Object,\nprivate oidcDataService: OidcDataService,\nprivate stateValidationService: StateValidationService,\nprivate authConfiguration: AuthConfiguration,\nprivate router: Router,\nprivate oidcSecurityCheckSession: OidcSecurityCheckSession,\nprivate oidcSecuritySilentRenew: OidcSecuritySilentRenew,\nprivate oidcSecurityUserService: OidcSecurityUserService,\nprivate oidcSecurityCommon: OidcSecurityCommon,\nprivate oidcSecurityValidation: OidcSecurityValidation,\nprivate tokenHelperService: TokenHelperService,\nprivate loggerService: LoggerService,\nprivate zone: NgZone\r\n    ) {}\n/**\n * @param {?} openIDImplicitFlowConfiguration\n * @param {?} authWellKnownEndpoints\n * @return {?}\n */\nsetupModule(\r\n        openIDImplicitFlowConfiguration: OpenIDImplicitFlowConfiguration,\r\n        authWellKnownEndpoints: AuthWellKnownEndpoints\r\n    ): void {\r\n        this.authWellKnownEndpoints = Object.assign({}, authWellKnownEndpoints);\r\n        this.authConfiguration.init(openIDImplicitFlowConfiguration);\r\n        this.stateValidationService.setupModule(authWellKnownEndpoints);\r\n        this.oidcSecurityCheckSession.setupModule(authWellKnownEndpoints);\r\n        this.oidcSecurityUserService.setupModule(authWellKnownEndpoints);\r\n\r\n        this.oidcSecurityCheckSession.onCheckSessionChanged.subscribe(() => {\r\n            this.loggerService.logDebug('onCheckSessionChanged');\r\n            this.checkSessionChanged = true;\r\n            this.onCheckSessionChanged.emit(\r\n                this.checkSessionChanged\r\n            );\r\n        });\r\n\r\n        this._userData.subscribe(() => {\r\n            this.onUserDataChanged();\r\n        });\r\n\r\n        const /** @type {?} */ userData = this.oidcSecurityCommon.userData;\r\n        if (userData) {\r\n            this.setUserData(userData);\r\n        }\r\n\r\n        const /** @type {?} */ isAuthorized = this.oidcSecurityCommon.isAuthorized;\r\n        if (isAuthorized) {\r\n            this.loggerService.logDebug('IsAuthorized setup module');\r\n            this.loggerService.logDebug(this.oidcSecurityCommon.idToken);\r\n            if (this.oidcSecurityValidation.isTokenExpired(\r\n                    this.oidcSecurityCommon.idToken,\r\n                    this.authConfiguration.silent_renew_offset_in_seconds)\r\n            ) {\r\n                this.loggerService.logDebug('IsAuthorized setup module; id_token isTokenExpired');\r\n            } else {\r\n                this.loggerService.logDebug('IsAuthorized setup module; id_token is valid');\r\n                this.setIsAuthorized(isAuthorized);\r\n                this.runTokenValidation();\r\n            }\r\n        }\r\n\r\n        this.loggerService.logDebug(\r\n            'STS server: ' + this.authConfiguration.stsServer\r\n        );\r\n\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            // Client only code.\r\n            this.moduleSetup = true;\r\n            this.onModuleSetup.emit();\r\n\r\n            if (this.authConfiguration.silent_renew) {\r\n                this.oidcSecuritySilentRenew.initRenew();\r\n\r\n                // Support authorization via DOM events.\r\n                this.boundSilentRenewEvent =  this.silentRenewEventHandler.bind(this);\r\n                window.addEventListener('oidc-silent-renew-message', this.boundSilentRenewEvent, false);\r\n            }\r\n\r\n            if (\r\n                this.authConfiguration.start_checksession &&\r\n                !this.oidcSecurityCheckSession.doesSessionExist()\r\n            ) {\r\n                this.oidcSecurityCheckSession.init().subscribe(() => {\r\n                    this.oidcSecurityCheckSession.pollServerSession(\r\n                        this.authConfiguration.client_id\r\n                    );\r\n                });\r\n            }\r\n        } else {\r\n            this.moduleSetup = true;\r\n            this.onModuleSetup.emit();\r\n        }\r\n    }\n/**\n * @return {?}\n */\ngetUserData(): Observable<any> {\r\n        return this._userData.asObservable();\r\n    }\n/**\n * @return {?}\n */\ngetIsAuthorized(): Observable<boolean> {\r\n        return this._isAuthorized.asObservable();\r\n    }\n/**\n * @return {?}\n */\ngetToken(): string {\r\n        if (!this._isAuthorizedValue) {\r\n            return '';\r\n        }\r\n\r\n        const /** @type {?} */ token = this.oidcSecurityCommon.getAccessToken();\r\n        return decodeURIComponent(token);\r\n    }\n/**\n * @return {?}\n */\ngetIdToken(): string {\r\n        if (!this._isAuthorizedValue) {\r\n            return '';\r\n        }\r\n\r\n        const /** @type {?} */ token = this.oidcSecurityCommon.getIdToken();\r\n        return decodeURIComponent(token);\r\n    }\n/**\n * @param {?=} encode\n * @return {?}\n */\ngetPayloadFromIdToken(encode = false): any {\r\n        const /** @type {?} */ token = this.getIdToken();\r\n        return this.tokenHelperService.getPayloadFromToken(token, encode);\r\n    }\n/**\n * @param {?} state\n * @return {?}\n */\nsetState(state: string): void {\r\n        this.oidcSecurityCommon.authStateControl = state;\r\n    }\n/**\n * @return {?}\n */\ngetState(): string {\r\n        return this.oidcSecurityCommon.authStateControl;\r\n    }\n/**\n * @param {?} params\n * @return {?}\n */\nsetCustomRequestParameters(params: {\r\n        [key: string]: string | number | boolean;\r\n    }) {\r\n        this.oidcSecurityCommon.customRequestParams = params;\r\n    }\n/**\n * @param {?=} urlHandler\n * @return {?}\n */\nauthorize(urlHandler?: (url: string) => any) {\r\n        if (this.authWellKnownEndpoints) {\r\n            this.authWellKnownEndpointsLoaded = true;\r\n        }\r\n\r\n        if (!this.authWellKnownEndpointsLoaded) {\r\n            this.loggerService.logError(\r\n                'Well known endpoints must be loaded before user can login!'\r\n            );\r\n            return;\r\n        }\r\n\r\n        if (\r\n            !this.oidcSecurityValidation.config_validate_response_type(\r\n                this.authConfiguration.response_type\r\n            )\r\n        ) {\r\n            // invalid response_type\r\n            return;\r\n        }\r\n\r\n        this.resetAuthorizationData(false);\r\n\r\n        this.loggerService.logDebug('BEGIN Authorize, no auth data');\r\n\r\n        let /** @type {?} */ state = this.oidcSecurityCommon.authStateControl;\r\n        if (!state) {\r\n            state = Date.now() + '' + Math.random();\r\n            this.oidcSecurityCommon.authStateControl = state;\r\n        }\r\n\r\n        const /** @type {?} */ nonce = 'N' + Math.random() + '' + Date.now();\r\n        this.oidcSecurityCommon.authNonce = nonce;\r\n        this.loggerService.logDebug(\r\n            'AuthorizedController created. local state: ' +\r\n                this.oidcSecurityCommon.authStateControl\r\n        );\r\n\r\n        const /** @type {?} */ url = this.createAuthorizeUrl(\r\n            this.authConfiguration.redirect_url,\r\n            nonce,\r\n            state,\r\n            this.authWellKnownEndpoints.authorization_endpoint\r\n        );\r\n        if (urlHandler) {\r\n            urlHandler(url);\r\n        } else {\r\n            window.location.href = url;\r\n        }\r\n    }\n/**\n * @param {?=} hash\n * @return {?}\n */\nauthorizedCallback(hash?: string) {\r\n        const /** @type {?} */ silentRenew = this.oidcSecurityCommon.silentRenewRunning;\r\n        const /** @type {?} */ isRenewProcess = silentRenew === 'running';\r\n\r\n        this.loggerService.logDebug('BEGIN authorizedCallback, no auth data');\r\n        this.resetAuthorizationData(isRenewProcess);\r\n\r\n        hash = hash || window.location.hash.substr(1);\r\n\r\n        const /** @type {?} */ result: any = hash\r\n            .split('&')\r\n            .reduce(function(resultData: any, item: string) {\r\n                const /** @type {?} */ parts = item.split('=');\r\n                resultData[parts[0]] = parts[1];\r\n                return resultData;\r\n            }, {});\r\n\r\n        this.oidcSecurityCommon.authResult = result;\r\n        this.loggerService.logDebug(result);\r\n        this.loggerService.logDebug(\r\n            'authorizedCallback created, begin token validation'\r\n        );\r\n\r\n        this.getSigningKeys().subscribe(jwtKeys => {\r\n            const /** @type {?} */ validationResult = this.getValidatedStateResult(\r\n                result,\r\n                jwtKeys\r\n            );\r\n\r\n            if (validationResult.authResponseIsValid) {\r\n                this.setAuthorizationData(\r\n                    validationResult.access_token,\r\n                    validationResult.id_token\r\n                );\r\n                this.oidcSecurityCommon.silentRenewRunning = '';\r\n\r\n                if (this.authConfiguration.auto_userinfo) {\r\n                    this.getUserinfo(\r\n                        isRenewProcess,\r\n                        result,\r\n                        validationResult.id_token,\r\n                        validationResult.decoded_id_token\r\n                    ).subscribe(response => {\r\n                        if (response) {\r\n                            this.onAuthorizationResult.emit(AuthorizationResult.authorized);\r\n                            if (!this.authConfiguration.trigger_authorization_result_event && !isRenewProcess) {\r\n                                this.router.navigate([\r\n                                    this.authConfiguration.post_login_route\r\n                                ]);\r\n                            }\r\n                        } else {\r\n                            this.onAuthorizationResult.emit(AuthorizationResult.unauthorized);\r\n                            if (!this.authConfiguration.trigger_authorization_result_event && !isRenewProcess) {\r\n                                this.router.navigate([\r\n                                    this.authConfiguration.unauthorized_route\r\n                                ]);\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    if (!isRenewProcess) {\r\n                        // userData is set to the id_token decoded, auto get user data set to false\r\n                        this.oidcSecurityUserService.setUserData(\r\n                            validationResult.decoded_id_token\r\n                        );\r\n                        this.setUserData(\r\n                            this.oidcSecurityUserService.getUserData()\r\n                        );\r\n                        this.runTokenValidation();\r\n                    }\r\n\r\n                    this.onAuthorizationResult.emit(AuthorizationResult.authorized);\r\n                    if (!this.authConfiguration.trigger_authorization_result_event && !isRenewProcess) {\r\n                        this.router.navigate([\r\n                            this.authConfiguration.post_login_route\r\n                        ]);\r\n                    }\r\n                }\r\n            } else {\r\n                // something went wrong\r\n                this.loggerService.logWarning(\r\n                    'authorizedCallback, token(s) validation failed, resetting'\r\n                );\r\n                this.loggerService.logWarning(window.location.hash);\r\n                this.resetAuthorizationData(false);\r\n                this.oidcSecurityCommon.silentRenewRunning = '';\r\n\r\n                this.onAuthorizationResult.emit(AuthorizationResult.unauthorized);\r\n                if (!this.authConfiguration.trigger_authorization_result_event && !isRenewProcess) {\r\n                    this.router.navigate([\r\n                        this.authConfiguration.unauthorized_route\r\n                    ]);\r\n                }\r\n            }\r\n        }, (err) => {\r\n            /* Something went wrong while getting signing key */\r\n            this.loggerService.logWarning(\r\n                'Failed to retreive siging key with error: ' + JSON.stringify(err)\r\n            );\r\n            this.oidcSecurityCommon.silentRenewRunning = '';\r\n        });\r\n    }\n/**\n * @param {?=} isRenewProcess\n * @param {?=} result\n * @param {?=} id_token\n * @param {?=} decoded_id_token\n * @return {?}\n */\ngetUserinfo(\r\n        isRenewProcess = false,\r\n        result?: any,\r\n        id_token?: any,\r\n        decoded_id_token?: any\r\n    ): Observable<boolean> {\r\n        result = result ? result : this.oidcSecurityCommon.authResult;\r\n        id_token = id_token ? id_token : this.oidcSecurityCommon.idToken;\r\n        decoded_id_token = decoded_id_token\r\n            ? decoded_id_token\r\n            : this.tokenHelperService.getPayloadFromToken(id_token, false);\r\n\r\n        return new Observable<boolean>(observer => {\r\n            // flow id_token token\r\n            if (this.authConfiguration.response_type === 'id_token token') {\r\n                if (isRenewProcess) {\r\n                    this.oidcSecurityCommon.sessionState = result.session_state;\r\n                    observer.next(true);\r\n                    observer.complete();\r\n                } else {\r\n                    this.oidcSecurityUserService\r\n                        .initUserData()\r\n                        .subscribe(() => {\r\n                            this.loggerService.logDebug(\r\n                                'authorizedCallback id_token token flow'\r\n                            );\r\n\r\n                            const /** @type {?} */ userData = this.oidcSecurityUserService.getUserData();\r\n\r\n                            if (\r\n                                this.oidcSecurityValidation.validate_userdata_sub_id_token(\r\n                                    decoded_id_token.sub,\r\n                                    userData.sub\r\n                                )\r\n                            ) {\r\n                                this.setUserData(userData);\r\n                                this.loggerService.logDebug(\r\n                                    this.oidcSecurityCommon.accessToken\r\n                                );\r\n                                this.loggerService.logDebug(\r\n                                    this.oidcSecurityUserService.getUserData()\r\n                                );\r\n\r\n                                this.oidcSecurityCommon.sessionState =\r\n                                    result.session_state;\r\n\r\n                                this.runTokenValidation();\r\n                                observer.next(true);\r\n                            } else {\r\n                                // something went wrong, userdata sub does not match that from id_token\r\n                                this.loggerService.logWarning(\r\n                                    'authorizedCallback, User data sub does not match sub in id_token'\r\n                                );\r\n                                this.loggerService.logDebug(\r\n                                    'authorizedCallback, token(s) validation failed, resetting'\r\n                                );\r\n                                this.resetAuthorizationData(false);\r\n                                observer.next(false);\r\n                            }\r\n                            observer.complete();\r\n                        });\r\n                }\r\n            } else {\r\n                // flow id_token\r\n                this.loggerService.logDebug('authorizedCallback id_token flow');\r\n                this.loggerService.logDebug(\r\n                    this.oidcSecurityCommon.accessToken\r\n                );\r\n\r\n                // userData is set to the id_token decoded. No access_token.\r\n                this.oidcSecurityUserService.setUserData(decoded_id_token);\r\n                this.setUserData(this.oidcSecurityUserService.getUserData());\r\n\r\n                this.oidcSecurityCommon.sessionState = result.session_state;\r\n\r\n                if (!isRenewProcess) {\r\n                    this.runTokenValidation();\r\n                }\r\n\r\n                observer.next(true);\r\n                observer.complete();\r\n            }\r\n        });\r\n    }\n/**\n * @return {?}\n */\nlogoff() {\r\n        // /connect/endsession?id_token_hint=...&post_logout_redirect_uri=https://myapp.com\r\n        this.loggerService.logDebug('BEGIN Authorize, no auth data');\r\n\r\n        if (this.authWellKnownEndpoints.end_session_endpoint) {\r\n            const /** @type {?} */ end_session_endpoint = this.authWellKnownEndpoints\r\n                .end_session_endpoint;\r\n            const /** @type {?} */ id_token_hint = this.oidcSecurityCommon.idToken;\r\n            const /** @type {?} */ url = this.createEndSessionUrl(\r\n                end_session_endpoint,\r\n                id_token_hint\r\n            );\r\n\r\n            this.resetAuthorizationData(false);\r\n\r\n            if (\r\n                this.authConfiguration.start_checksession &&\r\n                this.checkSessionChanged\r\n            ) {\r\n                this.loggerService.logDebug(\r\n                    'only local login cleaned up, server session has changed'\r\n                );\r\n            } else {\r\n                window.location.href = url;\r\n            }\r\n        } else {\r\n            this.resetAuthorizationData(false);\r\n            this.loggerService.logDebug(\r\n                'only local login cleaned up, no end_session_endpoint'\r\n            );\r\n        }\r\n    }\n/**\n * @return {?}\n */\nrefreshSession(): Observable<any> {\r\n        this.loggerService.logDebug('BEGIN refresh session Authorize');\r\n\r\n        let /** @type {?} */ state = this.oidcSecurityCommon.authStateControl;\r\n        if (state === '' || state === null) {\r\n            state = Date.now() + '' + Math.random();\r\n            this.oidcSecurityCommon.authStateControl = state;\r\n        }\r\n\r\n        const /** @type {?} */ nonce = 'N' + Math.random() + '' + Date.now();\r\n        this.oidcSecurityCommon.authNonce = nonce;\r\n        this.loggerService.logDebug(\r\n            'RefreshSession created. adding myautostate: ' +\r\n                this.oidcSecurityCommon.authStateControl\r\n        );\r\n\r\n        const /** @type {?} */ url = this.createAuthorizeUrl(\r\n            this.authConfiguration.silent_redirect_url,\r\n            nonce,\r\n            state,\r\n            this.authWellKnownEndpoints.authorization_endpoint,\r\n            'none'\r\n        );\r\n\r\n        this.oidcSecurityCommon.silentRenewRunning = 'running';\r\n        return this.oidcSecuritySilentRenew.startRenew(url);\r\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nhandleError(error: any) {\r\n        this.loggerService.logError(error);\r\n        if (error.status === 403 || error.status === '403') {\r\n            if (this.authConfiguration.trigger_authorization_result_event) {\r\n                this.onAuthorizationResult.emit(\r\n                    AuthorizationResult.unauthorized\r\n                );\r\n            } else {\r\n                this.router.navigate([this.authConfiguration.forbidden_route]);\r\n            }\r\n        } else if (error.status === 401 || error.status === '401') {\r\n            const /** @type {?} */ silentRenew = this.oidcSecurityCommon.silentRenewRunning;\r\n\r\n            this.resetAuthorizationData(!!silentRenew);\r\n\r\n            if (this.authConfiguration.trigger_authorization_result_event) {\r\n                this.onAuthorizationResult.emit(\r\n                    AuthorizationResult.unauthorized\r\n                );\r\n            } else {\r\n                this.router.navigate([\r\n                    this.authConfiguration.unauthorized_route\r\n                ]);\r\n            }\r\n        }\r\n    }\n/**\n * @return {?}\n */\nstartCheckingSilentRenew(): void {\r\n        this.runTokenValidation();\r\n    }\n/**\n * @return {?}\n */\nstopCheckingSilentRenew(): void {\r\n        if (this._scheduledHeartBeat) {\r\n            clearTimeout(this._scheduledHeartBeat);\r\n            this._scheduledHeartBeat = null;\r\n            this.runTokenValidationRunning = false;\r\n        }\r\n    }\n/**\n * @param {?} result\n * @param {?} jwtKeys\n * @return {?}\n */\nprivate getValidatedStateResult(\r\n        result: any,\r\n        jwtKeys: JwtKeys\r\n    ): ValidateStateResult {\r\n        if (result.error) {\r\n            return new ValidateStateResult('', '', false, {});\r\n        }\r\n\r\n        return this.stateValidationService.validateState(result, jwtKeys);\r\n    }\n/**\n * @param {?} userData\n * @return {?}\n */\nprivate setUserData(userData: any): void {\r\n        this.oidcSecurityCommon.userData = userData;\r\n        this._userData.next(userData);\r\n    }\n/**\n * @param {?} isAuthorized\n * @return {?}\n */\nprivate setIsAuthorized(isAuthorized: boolean): void {\r\n        this._isAuthorizedValue = isAuthorized;\r\n        this._isAuthorized.next(isAuthorized);\r\n    }\n/**\n * @param {?} access_token\n * @param {?} id_token\n * @return {?}\n */\nprivate setAuthorizationData(access_token: any, id_token: any) {\r\n        if (this.oidcSecurityCommon.accessToken !== '') {\r\n            this.oidcSecurityCommon.accessToken = '';\r\n        }\r\n\r\n        this.loggerService.logDebug(access_token);\r\n        this.loggerService.logDebug(id_token);\r\n        this.loggerService.logDebug('storing to storage, getting the roles');\r\n        this.oidcSecurityCommon.accessToken = access_token;\r\n        this.oidcSecurityCommon.idToken = id_token;\r\n        this.setIsAuthorized(true);\r\n        this.oidcSecurityCommon.isAuthorized = true;\r\n    }\n/**\n * @param {?} redirect_url\n * @param {?} nonce\n * @param {?} state\n * @param {?} authorization_endpoint\n * @param {?=} prompt\n * @return {?}\n */\nprivate createAuthorizeUrl(\r\n        redirect_url: string,\r\n        nonce: string,\r\n        state: string,\r\n        authorization_endpoint: string,\r\n        prompt?: string\r\n    ): string {\r\n        const /** @type {?} */ urlParts = authorization_endpoint.split('?');\r\n        const /** @type {?} */ authorizationUrl = urlParts[0];\r\n        let /** @type {?} */ params = new HttpParams({\r\n            fromString: urlParts[1],\r\n            encoder: new UriEncoder()\r\n        });\r\n        params = params.set('client_id', this.authConfiguration.client_id);\r\n        params = params.append(\r\n            'redirect_uri',\r\n            redirect_url\r\n        );\r\n        params = params.append(\r\n            'response_type',\r\n            this.authConfiguration.response_type\r\n        );\r\n        params = params.append('scope', this.authConfiguration.scope);\r\n        params = params.append('nonce', nonce);\r\n        params = params.append('state', state);\r\n\r\n        if (prompt) {\r\n            params = params.append('prompt', prompt);\r\n        }\r\n\r\n        if (this.authConfiguration.hd_param) {\r\n            params = params.append('hd', this.authConfiguration.hd_param);\r\n        }\r\n\r\n        const /** @type {?} */ customParams = Object.assign(\r\n            {},\r\n            this.oidcSecurityCommon.customRequestParams\r\n        );\r\n\r\n        Object.keys(customParams).forEach(key => {\r\n            params = params.append(key, customParams[key].toString());\r\n        });\r\n\r\n        return `${authorizationUrl}?${params}`;\r\n    }\n/**\n * @param {?} end_session_endpoint\n * @param {?} id_token_hint\n * @return {?}\n */\nprivate createEndSessionUrl(\r\n        end_session_endpoint: string,\r\n        id_token_hint: string\r\n    ) {\r\n        const /** @type {?} */ urlParts = end_session_endpoint.split('?');\r\n\r\n        const /** @type {?} */ authorizationEndsessionUrl = urlParts[0];\r\n\r\n        let /** @type {?} */ params = new HttpParams({\r\n            fromString: urlParts[1],\r\n            encoder: new UriEncoder()\r\n        });\r\n        params = params.set('id_token_hint', id_token_hint);\r\n        params = params.append(\r\n            'post_logout_redirect_uri',\r\n            this.authConfiguration.post_logout_redirect_uri\r\n        );\r\n\r\n        return `${authorizationEndsessionUrl}?${params}`;\r\n    }\n/**\n * @param {?} isRenewProcess\n * @return {?}\n */\nprivate resetAuthorizationData(isRenewProcess: boolean) {\r\n        if (!isRenewProcess) {\r\n            if (this.authConfiguration.auto_userinfo) {\r\n                // Clear user data. Fixes #97.\r\n                this.setUserData('');\r\n            }\r\n            this.setIsAuthorized(false);\r\n            this.oidcSecurityCommon.resetStorageData(isRenewProcess);\r\n            this.checkSessionChanged = false;\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprivate onUserDataChanged() {\r\n        this.loggerService.logDebug(\r\n            `onUserDataChanged: last = ${this.lastUserData}, new = ${\r\n                this._userData.value\r\n            }`\r\n        );\r\n\r\n        if (this.lastUserData && !this._userData.value) {\r\n            this.loggerService.logDebug('onUserDataChanged: Logout detected.');\r\n            // TODO should we have an action here\r\n        }\r\n        this.lastUserData = this._userData.value;\r\n    }\n/**\n * @return {?}\n */\nprivate getSigningKeys(): Observable<JwtKeys> {\r\n        this.loggerService.logDebug(\r\n            'jwks_uri: ' + this.authWellKnownEndpoints.jwks_uri\r\n        );\r\n        return this.oidcDataService\r\n            .get<JwtKeys>(this.authWellKnownEndpoints.jwks_uri)\r\n            .pipe(catchError(this.handleErrorGetSigningKeys));\r\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate handleErrorGetSigningKeys(error: Response | any) {\r\n        let /** @type {?} */ errMsg: string;\r\n        if (error instanceof Response) {\r\n            const /** @type {?} */ body = error.json() || {};\r\n            const /** @type {?} */ err = JSON.stringify(body);\r\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n        } else {\r\n            errMsg = error.message ? error.message : error.toString();\r\n        }\r\n        console.error(errMsg);\r\n        return Observable.throw(errMsg);\r\n    }\n/**\n * @return {?}\n */\nprivate runTokenValidation() {\r\n        if (this.runTokenValidationRunning) {\r\n            return;\r\n        }\r\n        this.runTokenValidationRunning = true;\n/**\n * First time: delay 10 seconds to call silentRenewHeartBeatCheck\rAfterwards: Run this check in a 5 second interval only AFTER the previous operation ends.\n */\nconst silentRenewHeartBeatCheck = () => {\r\n            if (this._userData.value && (this.oidcSecurityCommon.silentRenewRunning !== 'running') && this.getIdToken()) {\r\n                if (this.oidcSecurityValidation.isTokenExpired(\r\n                    this.oidcSecurityCommon.idToken,\r\n                    this.authConfiguration.silent_renew_offset_in_seconds\r\n                )\r\n                ) {\r\n                    this.loggerService.logDebug(\r\n                        'IsAuthorized: id_token isTokenExpired, start silent renew if active'\r\n                    );\r\n\r\n                    if (this.authConfiguration.silent_renew) {\r\n                        this.refreshSession().subscribe(() => {\r\n                            this._scheduledHeartBeat = setTimeout(silentRenewHeartBeatCheck, 3000);\r\n                        }, (err: any) => {\r\n                            this.loggerService.logError('Error: ' + err);\r\n                            this._scheduledHeartBeat = setTimeout(silentRenewHeartBeatCheck, 3000);\r\n                        });\r\n                        /* In this situation, we schedule a heatbeat check only when silentRenew is finished.\r\n                        We don't want to schedule another check so we have to return here */\r\n                        return;\r\n                    } else {\r\n                        this.resetAuthorizationData(false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /* Delay 3 seconds and do the next check */\r\n            this._scheduledHeartBeat = setTimeout(silentRenewHeartBeatCheck, 3000);\r\n        };\r\n\r\n        this.zone.runOutsideAngular(() => {\r\n            /* Initial heartbeat check */\r\n            this._scheduledHeartBeat = setTimeout(silentRenewHeartBeatCheck, 10000);\r\n        });\r\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nprivate silentRenewEventHandler(e: CustomEvent) {\r\n        this.loggerService.logDebug('silentRenewEventHandler');\r\n        this.authorizedCallback(e.detail);\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n{type: OidcDataService, },\n{type: StateValidationService, },\n{type: AuthConfiguration, },\n{type: Router, },\n{type: OidcSecurityCheckSession, },\n{type: OidcSecuritySilentRenew, },\n{type: OidcSecurityUserService, },\n{type: OidcSecurityCommon, },\n{type: OidcSecurityValidation, },\n{type: TokenHelperService, },\n{type: LoggerService, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onModuleSetup': [{ type: Output },],\n'onAuthorizationResult': [{ type: Output },],\n'onCheckSessionChanged': [{ type: Output },],\n};\n}\n\nfunction OidcSecurityService_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityService.ctorParameters;\n/** @type {?} */\nOidcSecurityService.propDecorators;\n/** @type {?} */\nOidcSecurityService.prototype.onModuleSetup;\n/** @type {?} */\nOidcSecurityService.prototype.onAuthorizationResult;\n/** @type {?} */\nOidcSecurityService.prototype.onCheckSessionChanged;\n/** @type {?} */\nOidcSecurityService.prototype.checkSessionChanged;\n/** @type {?} */\nOidcSecurityService.prototype.moduleSetup;\n/** @type {?} */\nOidcSecurityService.prototype.authWellKnownEndpoints;\n/** @type {?} */\nOidcSecurityService.prototype._isAuthorized;\n/** @type {?} */\nOidcSecurityService.prototype._isAuthorizedValue;\n/** @type {?} */\nOidcSecurityService.prototype.lastUserData;\n/** @type {?} */\nOidcSecurityService.prototype._userData;\n/** @type {?} */\nOidcSecurityService.prototype.authWellKnownEndpointsLoaded;\n/** @type {?} */\nOidcSecurityService.prototype.runTokenValidationRunning;\n/** @type {?} */\nOidcSecurityService.prototype._scheduledHeartBeat;\n/** @type {?} */\nOidcSecurityService.prototype.boundSilentRenewEvent;\n/** @type {?} */\nOidcSecurityService.prototype.platformId;\n/** @type {?} */\nOidcSecurityService.prototype.oidcDataService;\n/** @type {?} */\nOidcSecurityService.prototype.stateValidationService;\n/** @type {?} */\nOidcSecurityService.prototype.authConfiguration;\n/** @type {?} */\nOidcSecurityService.prototype.router;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityCheckSession;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecuritySilentRenew;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityUserService;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityCommon;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityValidation;\n/** @type {?} */\nOidcSecurityService.prototype.tokenHelperService;\n/** @type {?} */\nOidcSecurityService.prototype.loggerService;\n/** @type {?} */\nOidcSecurityService.prototype.zone;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { HttpParameterCodec } from '@angular/common/http';\nexport class UriEncoder implements HttpParameterCodec {\n/**\n * @param {?} key\n * @return {?}\n */\nencodeKey(key: string): string {\n        return encodeURIComponent(key);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nencodeValue(value: string): string {\n        return encodeURIComponent(value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\ndecodeKey(key: string): string {\n        return decodeURIComponent(key);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\ndecodeValue(value: string): string {\n        return decodeURIComponent(value);\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { map } from 'rxjs/operators';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { OidcDataService } from './oidc-data.service';\r\nimport { AuthWellKnownEndpoints } from '../models/auth.well-known-endpoints';\nexport class OidcSecurityUserService {\nprivate userData: any = '';\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints;\n/**\n * @param {?} oidcDataService\n * @param {?} oidcSecurityCommon\n */\nconstructor(\nprivate oidcDataService: OidcDataService,\nprivate oidcSecurityCommon: OidcSecurityCommon,\r\n    ) { }\n/**\n * @param {?} authWellKnownEndpoints\n * @return {?}\n */\nsetupModule(authWellKnownEndpoints: AuthWellKnownEndpoints) {\n        this.authWellKnownEndpoints = Object.assign({}, authWellKnownEndpoints);\n    }\n/**\n * @return {?}\n */\ninitUserData() {\r\n        return this.getIdentityUserData().pipe(\r\n            map((data: any) => (this.userData = data))\r\n        );\r\n    }\n/**\n * @return {?}\n */\ngetUserData(): any {\r\n        if (!this.userData) {\r\n            throw Error('UserData is not set!');\r\n        }\r\n\r\n        return this.userData;\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nsetUserData(value: any): void {\r\n        this.userData = value;\r\n    }\n/**\n * @return {?}\n */\nprivate getIdentityUserData(): Observable<any> {\r\n        const /** @type {?} */ token = this.oidcSecurityCommon.getAccessToken();\r\n\r\n        return this.oidcDataService.getIdentityUserData(\r\n            this.authWellKnownEndpoints.userinfo_endpoint,\r\n            token\r\n        );\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OidcDataService, },\n{type: OidcSecurityCommon, },\n];\n}\n\nfunction OidcSecurityUserService_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityUserService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityUserService.ctorParameters;\n/** @type {?} */\nOidcSecurityUserService.prototype.userData;\n/** @type {?} */\nOidcSecurityUserService.prototype.authWellKnownEndpoints;\n/** @type {?} */\nOidcSecurityUserService.prototype.oidcDataService;\n/** @type {?} */\nOidcSecurityUserService.prototype.oidcSecurityCommon;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nexport class OidcDataService {\n/**\n * @param {?} httpClient\n */\nconstructor(private httpClient: HttpClient) {}\n/**\n * @template T\n * @param {?} url\n * @return {?}\n */\ngetWellknownEndpoints<T>(url: string): Observable<T> {\n        let /** @type {?} */ headers = new HttpHeaders();\n        headers = headers.set('Accept', 'application/json');\n\n        return this.httpClient.get<T>(url, {\n            headers: headers\n        });\n    }\n/**\n * @template T\n * @param {?} url\n * @param {?} token\n * @return {?}\n */\ngetIdentityUserData<T>(url: string, token: string): Observable<T> {\n        let /** @type {?} */ headers = new HttpHeaders();\n        headers = headers.set('Accept', 'application/json');\n        headers = headers.set(\n            'Authorization',\n            'Bearer ' + decodeURIComponent(token)\n        );\n\n        return this.httpClient.get<T>(url, {\n            headers: headers\n        });\n    }\n/**\n * @template T\n * @param {?} url\n * @return {?}\n */\nget<T>(url: string): Observable<T> {\n        let /** @type {?} */ headers = new HttpHeaders();\n        headers = headers.set('Accept', 'application/json');\n\n        return this.httpClient.get<T>(url, {\n            headers: headers\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HttpClient, },\n];\n}\n\nfunction OidcDataService_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcDataService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcDataService.ctorParameters;\n/** @type {?} */\nOidcDataService.prototype.httpClient;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { LoggerService } from './oidc.logger.service';\nexport class OidcSecuritySilentRenew {\nprivate sessionIframe: any;\n/**\n * @param {?} loggerService\n */\nconstructor(private loggerService: LoggerService) {}\n/**\n * @return {?}\n */\ninitRenew() {\r\n        let /** @type {?} */ existsparent = undefined;\r\n        try {\r\n            const /** @type {?} */ parentdoc = window.parent.document;\r\n            if (!parentdoc) {\r\n                throw new Error('Unaccessible');\r\n            }\r\n\r\n            existsparent = parentdoc.getElementById('myiFrameForSilentRenew');\r\n        } catch ( /** @type {?} */e) {\r\n            // not accessible\r\n        }\r\n        const /** @type {?} */ exists = window.document.getElementById('myiFrameForSilentRenew');\r\n        if (existsparent) {\r\n            this.sessionIframe = existsparent;\r\n        } else if (exists) {\r\n            this.sessionIframe = exists;\r\n        }\r\n\r\n        if (!exists && !existsparent) {\r\n            this.sessionIframe = window.document.createElement('iframe');\r\n            this.sessionIframe.id = 'myiFrameForSilentRenew';\r\n            this.loggerService.logDebug(this.sessionIframe);\r\n            this.sessionIframe.style.display = 'none';\r\n\r\n            window.document.body.appendChild(this.sessionIframe);\r\n        }\r\n    }\n/**\n * @param {?} url\n * @return {?}\n */\nstartRenew(url: string): Observable<any> {\r\n        let /** @type {?} */ existsparent = undefined;\r\n        try {\r\n            const /** @type {?} */ parentdoc = window.parent.document;\r\n            if (!parentdoc) {\r\n                throw new Error('Unaccessible');\r\n            }\r\n\r\n            existsparent = parentdoc.getElementById('myiFrameForSilentRenew');\r\n        } catch ( /** @type {?} */e) {\r\n            // not accessible\r\n        }\r\n        const /** @type {?} */ exists = window.document.getElementById('myiFrameForSilentRenew');\r\n        if (existsparent) {\r\n            this.sessionIframe = existsparent;\r\n        } else if (exists) {\r\n            this.sessionIframe = exists;\r\n        }\r\n\r\n        this.loggerService.logDebug('startRenew for URL:' + url);\r\n        this.sessionIframe.src = url;\r\n\r\n        return Observable.create((observer: Observer<any>) => {\r\n            this.sessionIframe.onload = () => {\r\n                observer.next(this);\r\n                observer.complete();\r\n            };\r\n        });\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LoggerService, },\n];\n}\n\nfunction OidcSecuritySilentRenew_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecuritySilentRenew.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecuritySilentRenew.ctorParameters;\n/** @type {?} */\nOidcSecuritySilentRenew.prototype.sessionIframe;\n/** @type {?} */\nOidcSecuritySilentRenew.prototype.loggerService;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, EventEmitter, Output, NgZone } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { AuthConfiguration } from '../modules/auth.configuration';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { LoggerService } from './oidc.logger.service';\r\nimport { AuthWellKnownEndpoints } from '../models/auth.well-known-endpoints';\nexport class OidcSecurityCheckSession {\nprivate sessionIframe: any;\nprivate iframeMessageEvent: any;\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints;\nprivate _scheduledHeartBeat: any;\r\n\r\n    \r\n    onCheckSessionChanged: EventEmitter<any> = new EventEmitter<any>(true);\n/**\n * @param {?} authConfiguration\n * @param {?} oidcSecurityCommon\n * @param {?} loggerService\n * @param {?} zone\n */\nconstructor(\nprivate authConfiguration: AuthConfiguration,\nprivate oidcSecurityCommon: OidcSecurityCommon,\nprivate loggerService: LoggerService,\nprivate zone: NgZone\r\n    ) {}\n/**\n * @param {?} authWellKnownEndpoints\n * @return {?}\n */\nsetupModule(authWellKnownEndpoints: AuthWellKnownEndpoints) {\r\n        this.authWellKnownEndpoints = Object.assign({}, authWellKnownEndpoints);\r\n    }\n/**\n * @return {?}\n */\ndoesSessionExist(): boolean {\r\n        let /** @type {?} */ existsparent = undefined;\r\n        try {\r\n            const /** @type {?} */ parentdoc = window.parent.document;\r\n            if (!parentdoc) {\r\n                throw new Error('Unaccessible');\r\n            }\r\n\r\n            existsparent = parentdoc.getElementById('myiFrameForCheckSession');\r\n        } catch ( /** @type {?} */e) {\r\n            // not accessible\r\n        }\r\n        const /** @type {?} */ exists = window.document.getElementById(\r\n            'myiFrameForCheckSession'\r\n        );\r\n        if (existsparent) {\r\n            this.sessionIframe = existsparent;\r\n        } else if (exists) {\r\n            this.sessionIframe = exists;\r\n        }\r\n\r\n        if (existsparent || exists) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\n/**\n * @return {?}\n */\ninit() {\r\n        this.sessionIframe = window.document.createElement('iframe');\r\n        this.sessionIframe.id = 'myiFrameForCheckSession';\r\n        this.loggerService.logDebug(this.sessionIframe);\r\n        this.sessionIframe.style.display = 'none';\r\n        window.document.body.appendChild(this.sessionIframe);\r\n        this.sessionIframe.src = this.authWellKnownEndpoints.check_session_iframe;\r\n\r\n        this.iframeMessageEvent = this.messageHandler.bind(this);\r\n        window.addEventListener('message', this.iframeMessageEvent, false);\r\n\r\n        return Observable.create((observer: Observer<any>) => {\r\n            this.sessionIframe.onload = () => {\r\n                observer.next(this);\r\n                observer.complete();\r\n            };\r\n        });\r\n    }\n/**\n * @param {?} clientId\n * @return {?}\n */\nstartCheckingSession(clientId: any): void {\r\n        if (!this._scheduledHeartBeat) {\r\n            this.pollServerSession(clientId);\r\n        }\r\n    }\n/**\n * @return {?}\n */\nstopCheckingSession(): void {\r\n        if (this._scheduledHeartBeat) {\r\n            clearTimeout(this._scheduledHeartBeat);\r\n            this._scheduledHeartBeat = null;\r\n        }\r\n    }\n/**\n * @param {?} clientId\n * @return {?}\n */\npollServerSession(clientId: any) {\r\n        const /** @type {?} */ _pollServerSessionRecur = () => {\r\n            if (this.sessionIframe && clientId) {\r\n                this.loggerService.logDebug(this.sessionIframe);\r\n                const /** @type {?} */ session_state = this.oidcSecurityCommon.sessionState;\r\n                if (session_state) {\r\n                    this.sessionIframe.contentWindow.postMessage(\r\n                        clientId + ' ' + session_state,\r\n                        this.authConfiguration.stsServer\r\n                    );\r\n                }\r\n            } else {\r\n                this.loggerService.logWarning(\r\n                    'OidcSecurityCheckSession pollServerSession sessionIframe does not exist'\r\n                );\r\n                this.loggerService.logDebug(clientId);\r\n                this.loggerService.logDebug(this.sessionIframe);\r\n                // this.init();\r\n            }\r\n            this._scheduledHeartBeat = setTimeout(_pollServerSessionRecur, 3000);\r\n        };\r\n\r\n        this.zone.runOutsideAngular(() => {\r\n            this._scheduledHeartBeat = setTimeout(_pollServerSessionRecur, 3000);\r\n        });\r\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nprivate messageHandler(e: any) {\r\n        if (\r\n            this.sessionIframe &&\r\n            e.origin === this.authConfiguration.stsServer &&\r\n            e.source === this.sessionIframe.contentWindow\r\n        ) {\r\n            if (e.data === 'error') {\r\n                this.loggerService.logWarning(\r\n                    'error from checksession messageHandler'\r\n                );\r\n            } else if (e.data === 'changed') {\r\n                this.onCheckSessionChanged.emit();\r\n            } else {\r\n                this.loggerService.logDebug(\r\n                    e.data + ' from checksession messageHandler'\r\n                );\r\n            }\r\n        }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n{type: OidcSecurityCommon, },\n{type: LoggerService, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onCheckSessionChanged': [{ type: Output },],\n};\n}\n\nfunction OidcSecurityCheckSession_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityCheckSession.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityCheckSession.ctorParameters;\n/** @type {?} */\nOidcSecurityCheckSession.propDecorators;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.sessionIframe;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.iframeMessageEvent;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.authWellKnownEndpoints;\n/** @type {?} */\nOidcSecurityCheckSession.prototype._scheduledHeartBeat;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.onCheckSessionChanged;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.authConfiguration;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.oidcSecurityCommon;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.loggerService;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.zone;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { OidcSecurityCommon } from './oidc.security.common';\nimport { OidcSecurityValidation } from './oidc.security.validation';\nimport { AuthConfiguration } from '../modules/auth.configuration';\nimport { ValidateStateResult } from '../models/validate-state-result.model';\nimport { JwtKeys } from '../models/jwtkeys';\nimport { TokenHelperService } from './oidc-token-helper.service';\nimport { LoggerService } from './oidc.logger.service';\nimport { AuthWellKnownEndpoints } from '../models/auth.well-known-endpoints';\nexport class StateValidationService {\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints;\n/**\n * @param {?} authConfiguration\n * @param {?} oidcSecurityCommon\n * @param {?} oidcSecurityValidation\n * @param {?} tokenHelperService\n * @param {?} loggerService\n */\nconstructor(\nprivate authConfiguration: AuthConfiguration,\npublic oidcSecurityCommon: OidcSecurityCommon,\nprivate oidcSecurityValidation: OidcSecurityValidation,\nprivate tokenHelperService: TokenHelperService,\nprivate loggerService: LoggerService\n    ) {}\n/**\n * @param {?} authWellKnownEndpoints\n * @return {?}\n */\nsetupModule(authWellKnownEndpoints: AuthWellKnownEndpoints) {\n        this.authWellKnownEndpoints = Object.assign({}, authWellKnownEndpoints);\n    }\n/**\n * @param {?} result\n * @param {?} jwtKeys\n * @return {?}\n */\nvalidateState(result: any, jwtKeys: JwtKeys): ValidateStateResult {\n        const /** @type {?} */ toReturn = new ValidateStateResult('', '', false, {});\n        if (\n            !this.oidcSecurityValidation.validateStateFromHashCallback(\n                result.state,\n                this.oidcSecurityCommon.authStateControl\n            )\n        ) {\n            this.loggerService.logWarning('authorizedCallback incorrect state');\n            return toReturn;\n        }\n\n        if (this.authConfiguration.response_type === 'id_token token') {\n            toReturn.access_token = result.access_token;\n        }\n        toReturn.id_token = result.id_token;\n\n        toReturn.decoded_id_token = this.tokenHelperService.getPayloadFromToken(\n            toReturn.id_token,\n            false\n        );\n\n        if (\n            !this.oidcSecurityValidation.validate_signature_id_token(\n                toReturn.id_token,\n                jwtKeys\n            )\n        ) {\n            this.loggerService.logDebug(\n                'authorizedCallback Signature validation failed id_token'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_nonce(\n                toReturn.decoded_id_token,\n                this.oidcSecurityCommon.authNonce\n            )\n        ) {\n            this.loggerService.logWarning('authorizedCallback incorrect nonce');\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_required_id_token(\n                toReturn.decoded_id_token\n            )\n        ) {\n            this.loggerService.logDebug(\n                'authorizedCallback Validation, one of the REQUIRED properties missing from id_token'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_iat_max_offset(\n                toReturn.decoded_id_token,\n                this.authConfiguration\n                    .max_id_token_iat_offset_allowed_in_seconds\n            )\n        ) {\n            this.loggerService.logWarning(\n                'authorizedCallback Validation, iat rejected id_token was issued too far away from the current time'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_iss(\n                toReturn.decoded_id_token,\n                this.authWellKnownEndpoints.issuer\n            )\n        ) {\n            this.loggerService.logWarning(\n                'authorizedCallback incorrect iss does not match authWellKnownEndpoints issuer'\n            );\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_aud(\n                toReturn.decoded_id_token,\n                this.authConfiguration.client_id\n            )\n        ) {\n            this.loggerService.logWarning('authorizedCallback incorrect aud');\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_exp_not_expired(\n                toReturn.decoded_id_token\n            )\n        ) {\n            this.loggerService.logWarning('authorizedCallback token expired');\n            return toReturn;\n        }\n\n        // flow id_token token\n        if (this.authConfiguration.response_type !== 'id_token token') {\n            toReturn.authResponseIsValid = true;\n            this.handleSuccessfulValidation();\n            return toReturn;\n        }\n\n        if (\n            !this.oidcSecurityValidation.validate_id_token_at_hash(\n                toReturn.access_token,\n                toReturn.decoded_id_token.at_hash\n            ) ||\n            !toReturn.access_token\n        ) {\n            this.loggerService.logWarning(\n                'authorizedCallback incorrect at_hash'\n            );\n            return toReturn;\n        }\n\n        toReturn.authResponseIsValid = true;\n        this.handleSuccessfulValidation();\n        return toReturn;\n    }\n/**\n * @return {?}\n */\nprivate handleSuccessfulValidation() {\n        this.oidcSecurityCommon.authNonce = '';\n\n        if (this.authConfiguration.auto_clean_state_after_authentication) {\n            this.oidcSecurityCommon.authStateControl = '';\n        }\n        this.loggerService.logDebug(\n            'AuthorizedCallback token(s) validated, continue'\n        );\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n{type: OidcSecurityCommon, },\n{type: OidcSecurityValidation, },\n{type: TokenHelperService, },\n{type: LoggerService, },\n];\n}\n\nfunction StateValidationService_tsickle_Closure_declarations() {\n/** @type {?} */\nStateValidationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStateValidationService.ctorParameters;\n/** @type {?} */\nStateValidationService.prototype.authWellKnownEndpoints;\n/** @type {?} */\nStateValidationService.prototype.authConfiguration;\n/** @type {?} */\nStateValidationService.prototype.oidcSecurityCommon;\n/** @type {?} */\nStateValidationService.prototype.oidcSecurityValidation;\n/** @type {?} */\nStateValidationService.prototype.tokenHelperService;\n/** @type {?} */\nStateValidationService.prototype.loggerService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { KJUR, KEYUTIL, hextob64u } from 'jsrsasign';\r\nimport { ArrayHelperService } from './oidc-array-helper.service';\r\nimport { TokenHelperService } from './oidc-token-helper.service';\r\nimport { LoggerService } from './oidc.logger.service';\nexport class OidcSecurityValidation {\n/**\n * @param {?} arrayHelperService\n * @param {?} tokenHelperService\n * @param {?} loggerService\n */\nconstructor(\nprivate arrayHelperService: ArrayHelperService,\nprivate tokenHelperService: TokenHelperService,\nprivate loggerService: LoggerService\r\n    ) {}\n/**\n * @param {?} token\n * @param {?=} offsetSeconds\n * @return {?}\n */\nisTokenExpired(token: string, offsetSeconds?: number): boolean {\r\n        let /** @type {?} */ decoded: any;\r\n        decoded = this.tokenHelperService.getPayloadFromToken(token, false);\r\n\r\n        return !this.validate_id_token_exp_not_expired(decoded, offsetSeconds);\r\n    }\n/**\n * @param {?} decoded_id_token\n * @param {?=} offsetSeconds\n * @return {?}\n */\nvalidate_id_token_exp_not_expired(\r\n        decoded_id_token: string,\r\n        offsetSeconds?: number\r\n    ): boolean {\r\n        const /** @type {?} */ tokenExpirationDate = this.tokenHelperService.getTokenExpirationDate(\r\n            decoded_id_token\r\n        );\r\n        offsetSeconds = offsetSeconds || 0;\r\n\r\n        if (!tokenExpirationDate) {\r\n            return false;\r\n        }\r\n\r\n        // Token not expired?\r\n        return (\r\n            tokenExpirationDate.valueOf() >\r\n            new Date().valueOf() + offsetSeconds * 1000\r\n        );\r\n    }\n/**\n * @param {?} dataIdToken\n * @return {?}\n */\nvalidate_required_id_token(dataIdToken: any): boolean {\r\n        let /** @type {?} */ validated = true;\r\n        if (!dataIdToken.hasOwnProperty('iss')) {\r\n            validated = false;\r\n            this.loggerService.logWarning(\r\n                'iss is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('sub')) {\r\n            validated = false;\r\n            this.loggerService.logWarning(\r\n                'sub is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('aud')) {\r\n            validated = false;\r\n            this.loggerService.logWarning(\r\n                'aud is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('exp')) {\r\n            validated = false;\r\n            this.loggerService.logWarning(\r\n                'exp is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('iat')) {\r\n            validated = false;\r\n            this.loggerService.logWarning(\r\n                'iat is missing, this is required in the id_token'\r\n            );\r\n        }\r\n\r\n        return validated;\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} max_offset_allowed_in_seconds\n * @return {?}\n */\nvalidate_id_token_iat_max_offset(\r\n        dataIdToken: any,\r\n        max_offset_allowed_in_seconds: number\r\n    ): boolean {\r\n        if (!dataIdToken.hasOwnProperty('iat')) {\r\n            return false;\r\n        }\r\n\r\n        const /** @type {?} */ dateTime_iat_id_token = new Date(0); // The 0 here is the key, which sets the date to the epoch\r\n        dateTime_iat_id_token.setUTCSeconds(dataIdToken.iat);\r\n\r\n        max_offset_allowed_in_seconds = max_offset_allowed_in_seconds || 0;\r\n\r\n        if (dateTime_iat_id_token == null) {\r\n            return false;\r\n        }\r\n\r\n        this.loggerService.logDebug(\r\n            'validate_id_token_iat_max_offset: ' +\r\n                (new Date().valueOf() - dateTime_iat_id_token.valueOf()) +\r\n                ' < ' +\r\n                max_offset_allowed_in_seconds * 1000\r\n        );\r\n        return (\r\n            new Date().valueOf() - dateTime_iat_id_token.valueOf() <\r\n            max_offset_allowed_in_seconds * 1000\r\n        );\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} local_nonce\n * @return {?}\n */\nvalidate_id_token_nonce(dataIdToken: any, local_nonce: any): boolean {\r\n        if (dataIdToken.nonce !== local_nonce) {\r\n            this.loggerService.logDebug(\r\n                'Validate_id_token_nonce failed, dataIdToken.nonce: ' +\r\n                    dataIdToken.nonce +\r\n                    ' local_nonce:' +\r\n                    local_nonce\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} authWellKnownEndpoints_issuer\n * @return {?}\n */\nvalidate_id_token_iss(\r\n        dataIdToken: any,\r\n        authWellKnownEndpoints_issuer: any\r\n    ): boolean {\r\n        if (\r\n            ( /** @type {?} */((dataIdToken.iss as string))) !==\r\n            ( /** @type {?} */((authWellKnownEndpoints_issuer as string)))\r\n        ) {\r\n            this.loggerService.logDebug(\r\n                'Validate_id_token_iss failed, dataIdToken.iss: ' +\r\n                    dataIdToken.iss +\r\n                    ' authWellKnownEndpoints issuer:' +\r\n                    authWellKnownEndpoints_issuer\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} aud\n * @return {?}\n */\nvalidate_id_token_aud(dataIdToken: any, aud: any): boolean {\r\n        if (dataIdToken.aud instanceof Array) {\r\n            const /** @type {?} */ result = this.arrayHelperService.arraysEqual(\r\n                dataIdToken.aud,\r\n                aud\r\n            );\r\n\r\n            if (!result) {\r\n                this.loggerService.logDebug(\r\n                    'Validate_id_token_aud  array failed, dataIdToken.aud: ' +\r\n                        dataIdToken.aud +\r\n                        ' client_id:' +\r\n                        aud\r\n                );\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        } else if (dataIdToken.aud !== aud) {\r\n            this.loggerService.logDebug(\r\n                'Validate_id_token_aud failed, dataIdToken.aud: ' +\r\n                    dataIdToken.aud +\r\n                    ' client_id:' +\r\n                    aud\r\n            );\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} state\n * @param {?} local_state\n * @return {?}\n */\nvalidateStateFromHashCallback(state: any, local_state: any): boolean {\r\n        if (( /** @type {?} */((state as string))) !== ( /** @type {?} */((local_state as string)))) {\r\n            this.loggerService.logDebug(\r\n                'ValidateStateFromHashCallback failed, state: ' +\r\n                    state +\r\n                    ' local_state:' +\r\n                    local_state\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} id_token_sub\n * @param {?} userdata_sub\n * @return {?}\n */\nvalidate_userdata_sub_id_token(\r\n        id_token_sub: any,\r\n        userdata_sub: any\r\n    ): boolean {\r\n        if (( /** @type {?} */((id_token_sub as string))) !== ( /** @type {?} */((userdata_sub as string)))) {\r\n            this.loggerService.logDebug(\r\n                'validate_userdata_sub_id_token failed, id_token_sub: ' +\r\n                    id_token_sub +\r\n                    ' userdata_sub:' +\r\n                    userdata_sub\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} id_token\n * @param {?} jwtkeys\n * @return {?}\n */\nvalidate_signature_id_token(id_token: any, jwtkeys: any): boolean {\r\n        if (!jwtkeys || !jwtkeys.keys) {\r\n            return false;\r\n        }\r\n\r\n        const /** @type {?} */ header_data = this.tokenHelperService.getHeaderFromToken(\r\n            id_token,\r\n            false\r\n        );\r\n\r\n        if (\r\n            Object.keys(header_data).length === 0 &&\r\n            header_data.constructor === Object\r\n        ) {\r\n            this.loggerService.logWarning('id token has no header data');\r\n            return false;\r\n        }\r\n\r\n        const /** @type {?} */ kid = header_data.kid;\r\n        const /** @type {?} */ alg = header_data.alg;\r\n\r\n        if ('RS256' !== ( /** @type {?} */((alg as string)))) {\r\n            this.loggerService.logWarning('Only RS256 supported');\r\n            return false;\r\n        }\r\n\r\n        let /** @type {?} */ isValid = false;\r\n\r\n        if (!header_data.hasOwnProperty('kid')) {\r\n            // exactly 1 key in the jwtkeys and no kid in the Jose header\r\n            // kty\t\"RSA\" use \"sig\"\r\n            let /** @type {?} */ amountOfMatchingKeys = 0;\r\n            for (const /** @type {?} */ key of jwtkeys.keys) {\r\n                if (\r\n                    ( /** @type {?} */((key.kty as string))) === 'RSA' &&\r\n                    ( /** @type {?} */((key.use as string))) === 'sig'\r\n                ) {\r\n                    amountOfMatchingKeys = amountOfMatchingKeys + 1;\r\n                }\r\n            }\r\n\r\n            if (amountOfMatchingKeys === 0) {\r\n                this.loggerService.logWarning(\r\n                    'no keys found, incorrect Signature, validation failed for id_token'\r\n                );\r\n                return false;\r\n            } else if (amountOfMatchingKeys > 1) {\r\n                this.loggerService.logWarning(\r\n                    'no ID Token kid claim in JOSE header and multiple supplied in jwks_uri'\r\n                );\r\n                return false;\r\n            } else {\r\n                for (const /** @type {?} */ key of jwtkeys.keys) {\r\n                    if (\r\n                        ( /** @type {?} */((key.kty as string))) === 'RSA' &&\r\n                        ( /** @type {?} */((key.use as string))) === 'sig'\r\n                    ) {\r\n                        const /** @type {?} */ publickey = KEYUTIL.getKey(key);\r\n                        isValid = KJUR.jws.JWS.verify(id_token, publickey, [\r\n                            'RS256'\r\n                        ]);\r\n                        if (!isValid) {\r\n                            this.loggerService.logWarning(\r\n                                'incorrect Signature, validation failed for id_token'\r\n                            );\r\n                        }\r\n                        return isValid;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            // kid in the Jose header of id_token\r\n            for (const /** @type {?} */ key of jwtkeys.keys) {\r\n                if (( /** @type {?} */((key.kid as string))) === ( /** @type {?} */((kid as string)))) {\r\n                    const /** @type {?} */ publickey = KEYUTIL.getKey(key);\r\n                    isValid = KJUR.jws.JWS.verify(id_token, publickey, [\r\n                        'RS256'\r\n                    ]);\r\n                    if (!isValid) {\r\n                        this.loggerService.logWarning(\r\n                            'incorrect Signature, validation failed for id_token'\r\n                        );\r\n                    }\r\n                    return isValid;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\n/**\n * @param {?} response_type\n * @return {?}\n */\nconfig_validate_response_type(response_type: string): boolean {\r\n        if (\r\n            response_type === 'id_token token' ||\r\n            response_type === 'id_token'\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        this.loggerService.logWarning(\r\n            'module configure incorrect, invalid response_type:' + response_type\r\n        );\r\n        return false;\r\n    }\n/**\n * @param {?} access_token\n * @param {?} at_hash\n * @return {?}\n */\nvalidate_id_token_at_hash(access_token: any, at_hash: any): boolean {\r\n        this.loggerService.logDebug('From the server:' + at_hash);\r\n        const /** @type {?} */ testdata = this.generate_at_hash('' + access_token);\r\n        this.loggerService.logDebug(\r\n            'client validation not decoded:' + testdata\r\n        );\r\n        if (testdata === ( /** @type {?} */((at_hash as string)))) {\r\n            return true; // isValid;\r\n        } else {\r\n            const /** @type {?} */ testValue = this.generate_at_hash(\r\n                '' + decodeURIComponent(access_token)\r\n            );\r\n            this.loggerService.logDebug('-gen access--' + testValue);\r\n            if (testValue === ( /** @type {?} */((at_hash as string)))) {\r\n                return true; // isValid\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\n/**\n * @param {?} access_token\n * @return {?}\n */\nprivate generate_at_hash(access_token: any): string {\r\n        const /** @type {?} */ hash = KJUR.crypto.Util.hashString(access_token, 'sha256');\r\n        const /** @type {?} */ first128bits = hash.substr(0, hash.length / 2);\r\n        const /** @type {?} */ testdata = hextob64u(first128bits);\r\n\r\n        return testdata;\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ArrayHelperService, },\n{type: TokenHelperService, },\n{type: LoggerService, },\n];\n}\n\nfunction OidcSecurityValidation_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityValidation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityValidation.ctorParameters;\n/** @type {?} */\nOidcSecurityValidation.prototype.arrayHelperService;\n/** @type {?} */\nOidcSecurityValidation.prototype.tokenHelperService;\n/** @type {?} */\nOidcSecurityValidation.prototype.loggerService;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { AuthConfiguration } from '../modules/auth.configuration';\nexport class LoggerService {\n/**\n * @param {?} authConfiguration\n */\nconstructor(private authConfiguration: AuthConfiguration) {}\n/**\n * @param {?} message\n * @return {?}\n */\nlogError(message: any) {\n        console.error(message);\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nlogWarning(message: any) {\n        if (this.authConfiguration.log_console_warning_active) {\n            console.warn(message);\n        }\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nlogDebug(message: any) {\n        if (this.authConfiguration.log_console_debug_active) {\n            console.log(message);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n];\n}\n\nfunction LoggerService_tsickle_Closure_declarations() {\n/** @type {?} */\nLoggerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLoggerService.ctorParameters;\n/** @type {?} */\nLoggerService.prototype.authConfiguration;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nexport class TokenHelperService {\nconstructor() {}\n/**\n * @param {?} dataIdToken\n * @return {?}\n */\ngetTokenExpirationDate(dataIdToken: any): Date {\n        if (!dataIdToken.hasOwnProperty('exp')) {\n            return new Date();\n        }\n\n        const /** @type {?} */ date = new Date(0); // The 0 here is the key, which sets the date to the epoch\n        date.setUTCSeconds(dataIdToken.exp);\n\n        return date;\n    }\n/**\n * @param {?} token\n * @param {?} encode\n * @return {?}\n */\ngetPayloadFromToken(token: any, encode: boolean) {\n        let /** @type {?} */ data = {};\n        if (typeof token !== 'undefined') {\n            const /** @type {?} */ encoded = token.split('.')[1];\n            if (encode) {\n                return encoded;\n            }\n            data = JSON.parse(this.urlBase64Decode(encoded));\n        }\n\n        return data;\n    }\n/**\n * @param {?} token\n * @param {?} encode\n * @return {?}\n */\ngetHeaderFromToken(token: any, encode: boolean) {\n        let /** @type {?} */ data = {};\n        if (typeof token !== 'undefined') {\n            const /** @type {?} */ encoded = token.split('.')[0];\n            if (encode) {\n                return encoded;\n            }\n            data = JSON.parse(this.urlBase64Decode(encoded));\n        }\n\n        return data;\n    }\n/**\n * @param {?} token\n * @param {?} encode\n * @return {?}\n */\ngetSignatureFromToken(token: any, encode: boolean) {\n        let /** @type {?} */ data = {};\n        if (typeof token !== 'undefined') {\n            const /** @type {?} */ encoded = token.split('.')[2];\n            if (encode) {\n                return encoded;\n            }\n            data = JSON.parse(this.urlBase64Decode(encoded));\n        }\n\n        return data;\n    }\n/**\n * @param {?} str\n * @return {?}\n */\nurlBase64Decode(str: string) {\n        let /** @type {?} */ output = str.replace('-', '+').replace('_', '/');\n        switch (output.length % 4) {\n            case 0:\n                break;\n            case 2:\n                output += '==';\n                break;\n            case 3:\n                output += '=';\n                break;\n            default:\n                throw Error('Illegal base64url string!');\n        }\n\n        return window.atob(output);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TokenHelperService_tsickle_Closure_declarations() {\n/** @type {?} */\nTokenHelperService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTokenHelperService.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nexport class ArrayHelperService {\nconstructor() {}\n/**\n * @param {?} arr1\n * @param {?} arr2\n * @return {?}\n */\narraysEqual(arr1: Array<string>, arr2: Array<string>) {\n        if (arr1.length !== arr2.length) {\n            return false;\n        }\n\n        for (let /** @type {?} */ i = arr1.length; i--; ) {\n            if (arr1[i] !== arr2[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ArrayHelperService_tsickle_Closure_declarations() {\n/** @type {?} */\nArrayHelperService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nArrayHelperService.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { OidcSecurityStorage } from './oidc.security.storage';\r\n\r\nexport type SilentRenewState = 'running' | '';\nexport class OidcSecurityCommon {\nprivate storage_auth_result = 'authorizationResult';\n/**\n * @return {?}\n */\npublic get authResult(): any {\r\n        return this.retrieve(this.storage_auth_result);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set authResult(value: any) {\r\n        this.store(this.storage_auth_result, value);\r\n    }\nprivate storage_access_token = 'authorizationData';\n/**\n * @return {?}\n */\npublic get accessToken(): string {\r\n        return this.retrieve(this.storage_access_token) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set accessToken(value: string) {\r\n        this.store(this.storage_access_token, value);\r\n    }\nprivate storage_id_token = 'authorizationDataIdToken';\n/**\n * @return {?}\n */\npublic get idToken(): string {\r\n        return this.retrieve(this.storage_id_token) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set idToken(value: string) {\r\n        this.store(this.storage_id_token, value);\r\n    }\nprivate storage_is_authorized = '_isAuthorized';\n/**\n * @return {?}\n */\npublic get isAuthorized(): boolean | undefined {\r\n        return this.retrieve(this.storage_is_authorized);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set isAuthorized(value: boolean | undefined) {\r\n        this.store(this.storage_is_authorized, value);\r\n    }\nprivate storage_user_data = 'userData';\n/**\n * @return {?}\n */\npublic get userData(): any {\r\n        return this.retrieve(this.storage_user_data);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set userData(value: any) {\r\n        this.store(this.storage_user_data, value);\r\n    }\nprivate storage_auth_nonce = 'authNonce';\n/**\n * @return {?}\n */\npublic get authNonce(): string {\r\n        return this.retrieve(this.storage_auth_nonce) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set authNonce(value: string) {\r\n        this.store(this.storage_auth_nonce, value);\r\n    }\nprivate storage_auth_state_control = 'authStateControl';\n/**\n * @return {?}\n */\npublic get authStateControl(): string {\r\n        return this.retrieve(this.storage_auth_state_control) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set authStateControl(value: string) {\r\n        this.store(this.storage_auth_state_control, value);\r\n    }\nprivate storage_session_state = 'session_state';\n/**\n * @return {?}\n */\npublic get sessionState(): any {\r\n        return this.retrieve(this.storage_session_state);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set sessionState(value: any) {\r\n        this.store(this.storage_session_state, value);\r\n    }\nprivate storage_silent_renew_running = 'storage_silent_renew_running';\n/**\n * @return {?}\n */\npublic get silentRenewRunning(): SilentRenewState {\r\n        return this.retrieve(this.storage_silent_renew_running) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set silentRenewRunning(value: SilentRenewState) {\r\n        this.store(this.storage_silent_renew_running, value);\r\n    }\nprivate storage_custom_request_params = 'storage_custom_request_params';\n/**\n * @return {?}\n */\npublic get customRequestParams(): {\r\n        [key: string]: string | number | boolean;\r\n    } {\r\n        return this.retrieve(this.storage_custom_request_params);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set customRequestParams(value: {\r\n        [key: string]: string | number | boolean;\r\n    }) {\r\n        this.store(this.storage_custom_request_params, value);\r\n    }\n/**\n * @param {?} oidcSecurityStorage\n */\nconstructor(private oidcSecurityStorage: OidcSecurityStorage) {}\n/**\n * @return {?}\n */\nsetupModule() {}\n/**\n * @param {?} key\n * @return {?}\n */\nprivate retrieve(key: string): any {\r\n        return this.oidcSecurityStorage.read(key);\r\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nprivate store(key: string, value: any) {\r\n        this.oidcSecurityStorage.write(key, value);\r\n    }\n/**\n * @param {?} isRenewProcess\n * @return {?}\n */\nresetStorageData(isRenewProcess: boolean) {\r\n        if (!isRenewProcess) {\r\n            this.store(this.storage_auth_result, '');\r\n            this.store(this.storage_session_state, '');\r\n            this.store(this.storage_silent_renew_running, '');\r\n            this.store(this.storage_is_authorized, false);\r\n            this.store(this.storage_access_token, '');\r\n            this.store(this.storage_id_token, '');\r\n            this.store(this.storage_user_data, '');\r\n        }\r\n    }\n/**\n * @return {?}\n */\ngetAccessToken(): any {\r\n        return this.retrieve(this.storage_access_token);\r\n    }\n/**\n * @return {?}\n */\ngetIdToken(): any {\r\n        return this.retrieve(this.storage_id_token);\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OidcSecurityStorage, },\n];\n}\n\nfunction OidcSecurityCommon_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityCommon.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityCommon.ctorParameters;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_auth_result;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_access_token;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_id_token;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_is_authorized;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_user_data;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_auth_nonce;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_auth_state_control;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_session_state;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_silent_renew_running;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_custom_request_params;\n/** @type {?} */\nOidcSecurityCommon.prototype.oidcSecurityStorage;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { AuthConfiguration } from '../modules/auth.configuration';\n/**\n * Implement this class-interface to create a custom storage.\n * @abstract\n */\nexport abstract class OidcSecurityStorage {\n/**\n * This method must contain the logic to read the storage.\n * @abstract\n * @param {?} key\n * @return {?} The value of the given key\n */\nread(key: string) {}\n/**\n * This method must contain the logic to write the storage.\n * @abstract\n * @param {?} key\n * @param {?} value The value for the given key\n * @return {?}\n */\nwrite(key: string, value: any) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction OidcSecurityStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityStorage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityStorage.ctorParameters;\n}\n\nexport class BrowserStorage implements OidcSecurityStorage {\nprivate hasStorage: boolean;\n/**\n * @param {?} authConfiguration\n */\nconstructor(private authConfiguration: AuthConfiguration) {\n        this.hasStorage = typeof Storage !== 'undefined';\n    }\n/**\n * @param {?} key\n * @return {?}\n */\npublic read(key: string): any {\n        if (this.hasStorage) {\n            return JSON.parse(this.authConfiguration.storage.getItem(key));\n        }\n\n        return;\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\npublic write(key: string, value: any): void {\n        if (this.hasStorage) {\n            value = value === undefined ? null : value;\n            this.authConfiguration.storage.setItem(key, JSON.stringify(value));\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n];\n}\n\nfunction BrowserStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserStorage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserStorage.ctorParameters;\n/** @type {?} */\nBrowserStorage.prototype.hasStorage;\n/** @type {?} */\nBrowserStorage.prototype.authConfiguration;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nexport class DefaultConfiguration {\r\n    stsServer = 'https://localhost:44318';\r\n    redirect_url = 'https://localhost:44311';\r\n    // The Client MUST validate that the aud (audience) Claim contains its client_id value registered at the Issuer identified\r\n    // by the iss (issuer) Claim as an audience.\r\n    // The ID Token MUST be rejected if the ID Token does not list the Client as a valid audience,\r\n    // or if it contains additional audiences not trusted by the Client.\r\n    client_id = 'angularclient';\r\n    response_type = 'id_token token';\r\n    // For some oidc, we require resource identifier to be provided along with the request.\r\n    resource = '';\r\n    scope = 'openid email profile';\r\n    // Only for Google Auth with particular G Suite domain, see https://developers.google.com/identity/protocols/OpenIDConnect#hd-param\r\n    hd_param = '';\r\n    post_logout_redirect_uri = 'https://localhost:44311/unauthorized';\r\n    start_checksession = false;\r\n    silent_renew = true;\r\n    silent_renew_offset_in_seconds = 0;\r\n    silent_redirect_url = 'https://localhost:44311';\r\n    post_login_route = '/';\r\n    // HTTP 403\r\n    forbidden_route = '/forbidden';\r\n    // HTTP 401\r\n    unauthorized_route = '/unauthorized';\r\n    auto_userinfo = true;\r\n    auto_clean_state_after_authentication: true;\r\n    trigger_authorization_result_event: false;\r\n    log_console_warning_active = true;\r\n    log_console_debug_active = false;\r\n\r\n    // id_token C8: The iat Claim can be used to reject tokens that were issued too far away from the current time,\r\n    // limiting the amount of time that nonces need to be stored to prevent attacks.The acceptable range is Client specific.\r\n    max_id_token_iat_offset_allowed_in_seconds = 3;\r\n\r\n    storage = typeof Storage !== 'undefined' ? sessionStorage : null;\r\n}\n\nfunction DefaultConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultConfiguration.prototype.stsServer;\n/** @type {?} */\nDefaultConfiguration.prototype.redirect_url;\n/** @type {?} */\nDefaultConfiguration.prototype.client_id;\n/** @type {?} */\nDefaultConfiguration.prototype.response_type;\n/** @type {?} */\nDefaultConfiguration.prototype.resource;\n/** @type {?} */\nDefaultConfiguration.prototype.scope;\n/** @type {?} */\nDefaultConfiguration.prototype.hd_param;\n/** @type {?} */\nDefaultConfiguration.prototype.post_logout_redirect_uri;\n/** @type {?} */\nDefaultConfiguration.prototype.start_checksession;\n/** @type {?} */\nDefaultConfiguration.prototype.silent_renew;\n/** @type {?} */\nDefaultConfiguration.prototype.silent_renew_offset_in_seconds;\n/** @type {?} */\nDefaultConfiguration.prototype.silent_redirect_url;\n/** @type {?} */\nDefaultConfiguration.prototype.post_login_route;\n/** @type {?} */\nDefaultConfiguration.prototype.forbidden_route;\n/** @type {?} */\nDefaultConfiguration.prototype.unauthorized_route;\n/** @type {?} */\nDefaultConfiguration.prototype.auto_userinfo;\n/** @type {?} */\nDefaultConfiguration.prototype.auto_clean_state_after_authentication;\n/** @type {?} */\nDefaultConfiguration.prototype.trigger_authorization_result_event;\n/** @type {?} */\nDefaultConfiguration.prototype.log_console_warning_active;\n/** @type {?} */\nDefaultConfiguration.prototype.log_console_debug_active;\n/** @type {?} */\nDefaultConfiguration.prototype.max_id_token_iat_offset_allowed_in_seconds;\n/** @type {?} */\nDefaultConfiguration.prototype.storage;\n}\n\nexport class OpenIDImplicitFlowConfiguration {\r\n    stsServer: string;\r\n    redirect_url: string;\r\n    client_id: string;\r\n    response_type: string;\r\n    resource: string;\r\n    scope: string;\r\n    hd_param: string;\r\n    post_logout_redirect_uri: string;\r\n    start_checksession: boolean;\r\n    silent_renew: boolean;\r\n    silent_renew_offset_in_seconds: number;\r\n    silent_renew_url: string;\r\n    post_login_route: string;\r\n    forbidden_route: string;\r\n    unauthorized_route: string;\r\n    auto_userinfo: boolean;\r\n    auto_clean_state_after_authentication: boolean;\r\n    trigger_authorization_result_event: boolean;\r\n    log_console_warning_active: boolean;\r\n    log_console_debug_active: boolean;\r\n    max_id_token_iat_offset_allowed_in_seconds: number;\r\n    storage: any;\r\n}\n\nfunction OpenIDImplicitFlowConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.stsServer;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.redirect_url;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.client_id;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.response_type;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.resource;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.scope;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.hd_param;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.post_logout_redirect_uri;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.start_checksession;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.silent_renew;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.silent_renew_offset_in_seconds;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.silent_renew_url;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.post_login_route;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.forbidden_route;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.unauthorized_route;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.auto_userinfo;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.auto_clean_state_after_authentication;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.trigger_authorization_result_event;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.log_console_warning_active;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.log_console_debug_active;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.max_id_token_iat_offset_allowed_in_seconds;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.storage;\n}\n\nexport class AuthConfiguration {\nprivate openIDImplicitFlowConfiguration: OpenIDImplicitFlowConfiguration;\n/**\n * @return {?}\n */\nget stsServer(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.stsServer ||\r\n            this.defaultConfig.stsServer\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget redirect_url(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.redirect_url ||\r\n            this.defaultConfig.redirect_url\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget silent_redirect_url(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.silent_renew_url ||\r\n            this.defaultConfig.silent_redirect_url\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget client_id(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.client_id ||\r\n            this.defaultConfig.client_id\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget response_type(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.response_type ||\r\n            this.defaultConfig.response_type\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget resource(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.resource ||\r\n            this.defaultConfig.resource\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget scope(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.scope ||\r\n            this.defaultConfig.scope\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget hd_param(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.hd_param ||\r\n            this.defaultConfig.hd_param\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget post_logout_redirect_uri(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.post_logout_redirect_uri ||\r\n            this.defaultConfig.post_logout_redirect_uri\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget start_checksession(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.start_checksession !==\r\n            undefined\r\n            ? this.openIDImplicitFlowConfiguration.start_checksession\r\n            : this.defaultConfig.start_checksession;\r\n    }\n/**\n * @return {?}\n */\nget silent_renew(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.silent_renew !== undefined\r\n            ? this.openIDImplicitFlowConfiguration.silent_renew\r\n            : this.defaultConfig.silent_renew;\r\n    }\n/**\n * @return {?}\n */\nget silent_renew_offset_in_seconds(): number {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration\r\n                .silent_renew_offset_in_seconds ||\r\n            this.defaultConfig.silent_renew_offset_in_seconds\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget post_login_route(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.post_login_route ||\r\n            this.defaultConfig.post_login_route\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget forbidden_route(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.forbidden_route ||\r\n            this.defaultConfig.forbidden_route\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget unauthorized_route(): string {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.unauthorized_route ||\r\n            this.defaultConfig.unauthorized_route\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget auto_userinfo(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.auto_userinfo !== undefined\r\n            ? this.openIDImplicitFlowConfiguration.auto_userinfo\r\n            : this.defaultConfig.auto_userinfo;\r\n    }\n/**\n * @return {?}\n */\nget auto_clean_state_after_authentication(): boolean {\r\n        return this.openIDImplicitFlowConfiguration\r\n            .auto_clean_state_after_authentication !== undefined\r\n            ? this.openIDImplicitFlowConfiguration\r\n                  .auto_clean_state_after_authentication\r\n            : this.defaultConfig.auto_clean_state_after_authentication;\r\n    }\n/**\n * @return {?}\n */\nget trigger_authorization_result_event(): boolean {\r\n        return this.openIDImplicitFlowConfiguration\r\n            .trigger_authorization_result_event !== undefined\r\n            ? this.openIDImplicitFlowConfiguration\r\n                  .trigger_authorization_result_event\r\n            : this.defaultConfig.trigger_authorization_result_event;\r\n    }\n/**\n * @return {?}\n */\nget log_console_warning_active(): boolean {\r\n        return this.openIDImplicitFlowConfiguration\r\n            .log_console_warning_active !== undefined\r\n            ? this.openIDImplicitFlowConfiguration.log_console_warning_active\r\n            : this.defaultConfig.log_console_warning_active;\r\n    }\n/**\n * @return {?}\n */\nget log_console_debug_active(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.log_console_debug_active !==\r\n            undefined\r\n            ? this.openIDImplicitFlowConfiguration.log_console_debug_active\r\n            : this.defaultConfig.log_console_debug_active;\r\n    }\n/**\n * @return {?}\n */\nget max_id_token_iat_offset_allowed_in_seconds(): number {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration\r\n                .max_id_token_iat_offset_allowed_in_seconds ||\r\n            this.defaultConfig.max_id_token_iat_offset_allowed_in_seconds\r\n        );\r\n    }\n/**\n * @return {?}\n */\nget storage(): any {\r\n        return (\r\n            this.openIDImplicitFlowConfiguration.storage ||\r\n            this.defaultConfig.storage\r\n        );\r\n    }\n/**\n * @param {?} defaultConfig\n */\nconstructor(private defaultConfig: DefaultConfiguration) {}\n/**\n * @param {?} openIDImplicitFlowConfiguration\n * @return {?}\n */\ninit(openIDImplicitFlowConfiguration: OpenIDImplicitFlowConfiguration) {\r\n        this.openIDImplicitFlowConfiguration = openIDImplicitFlowConfiguration;\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DefaultConfiguration, },\n];\n}\n\nfunction AuthConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthConfiguration.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuthConfiguration.ctorParameters;\n/** @type {?} */\nAuthConfiguration.prototype.openIDImplicitFlowConfiguration;\n/** @type {?} */\nAuthConfiguration.prototype.defaultConfig;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class ValidateStateResult {\n/**\n * @param {?=} access_token\n * @param {?=} id_token\n * @param {?=} authResponseIsValid\n * @param {?=} decoded_id_token\n */\nconstructor(\npublic access_token = '',\npublic id_token = '',\npublic authResponseIsValid = false,\npublic decoded_id_token: any\n    ) {}\n}\n\nfunction ValidateStateResult_tsickle_Closure_declarations() {\n/** @type {?} */\nValidateStateResult.prototype.access_token;\n/** @type {?} */\nValidateStateResult.prototype.id_token;\n/** @type {?} */\nValidateStateResult.prototype.authResponseIsValid;\n/** @type {?} */\nValidateStateResult.prototype.decoded_id_token;\n}\n\n","\nexport type AuthorizationResult = number;\nexport let AuthorizationResult: any = {};\nAuthorizationResult.authorized = 1;\nAuthorizationResult.forbidden = 2;\nAuthorizationResult.unauthorized = 3;\nAuthorizationResult[AuthorizationResult.authorized] = \"authorized\";\nAuthorizationResult[AuthorizationResult.forbidden] = \"forbidden\";\nAuthorizationResult[AuthorizationResult.unauthorized] = \"unauthorized\";\n\n","import { Injectable, EventEmitter, Output } from '@angular/core';\nexport class OidcConfigService {\r\n   onConfigurationLoaded = new EventEmitter<boolean>();\r\n  clientConfiguration: any;\r\n  wellKnownEndpoints: any;\n/**\n * @param {?} configUrl\n * @return {?}\n */\nasync load(configUrl: string) {\r\n    try {\r\n      const /** @type {?} */ response = await fetch(configUrl);\r\n      if (!response.ok) {\r\n        throw new Error(response.statusText);\r\n      }\r\n\r\n      this.clientConfiguration = await response.json();\r\n      await this.load_using_stsServer(this.clientConfiguration.stsServer);\r\n    } catch ( /** @type {?} */err) {\r\n      console.error(\r\n        `OidcConfigService 'load' threw an error on calling ${configUrl}`,\r\n        err\r\n      );\r\n      this.onConfigurationLoaded.emit(false);\r\n    }\r\n  }\n/**\n * @param {?} stsServer\n * @return {?}\n */\nasync load_using_stsServer(stsServer: string) {\r\n    try {\r\n      const /** @type {?} */ response = await fetch(\r\n        `${stsServer}/.well-known/openid-configuration`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(response.statusText);\r\n      }\r\n\r\n      this.wellKnownEndpoints = await response.json();\r\n      this.onConfigurationLoaded.emit(true);\r\n    } catch ( /** @type {?} */err) {\r\n      console.error(\r\n        `OidcConfigService 'load_using_stsServer' threw an error on calling ${stsServer}`,\r\n        err\r\n      );\r\n      this.onConfigurationLoaded.emit(false);\r\n    }\r\n  }\n/**\n * @param {?} stsServer\n * @return {?}\n */\nasync load_using_custom_stsServer(stsServer: string) {\r\n    try {\r\n      const /** @type {?} */ response = await fetch(stsServer);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(response.statusText);\r\n      }\r\n      this.wellKnownEndpoints = await response.json();\r\n      this.onConfigurationLoaded.emit(true);\r\n    } catch ( /** @type {?} */err) {\r\n      console.error(\r\n        `OidcConfigService 'load_using_custom_stsServer' threw an error on calling ${stsServer}`,\r\n        err\r\n      );\r\n      this.onConfigurationLoaded.emit(false);\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onConfigurationLoaded': [{ type: Output },],\n};\n}\n\nfunction OidcConfigService_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcConfigService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcConfigService.ctorParameters;\n/** @type {?} */\nOidcConfigService.propDecorators;\n/** @type {?} */\nOidcConfigService.prototype.onConfigurationLoaded;\n/** @type {?} */\nOidcConfigService.prototype.clientConfiguration;\n/** @type {?} */\nOidcConfigService.prototype.wellKnownEndpoints;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}